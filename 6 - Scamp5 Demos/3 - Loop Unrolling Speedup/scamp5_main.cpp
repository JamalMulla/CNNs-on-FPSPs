/*
 * Scamp5d M0 Demo - Fully Connected Computation Speed-up
 *
 * We perform the computation of a 2 layers fully connected network,
 * with a (fixed) vector of length 27 as input,
 * a 50 units hidden vector, and a 10 units output.
 *
 * This corresponds to two matrix - vector multiplication:
 * 	- one (50*27) * (27*1) multiplication + add bias of (50*1)
 * 	- application of a ReLU on the resulting (50*1) vector
 * 	- one (10*50) * (50*1) multiplication + add bias of (10*1)
 *
 */

#include <scamp5.hpp>

using namespace SCAMP5_PE;

/*
 * 3 options for fully connected computations:
 *  0 - standard loop and variable for matrix - vector multiplication
 *  1 - unrolled loop for matrix - vector multiplication
 *  2 - unrolled loop AND hardcoded weights
 */
#define FC_COMPUTATION_TYPE 2

#if FC_COMPUTATION_TYPE == 0 || FC_COMPUTATION_TYPE == 1

// Arrays storing the weights of the FC layers
int fc1_k[27][50] = {{	-26,	15,	3,	-32,	-26,	-3,	4,	8,	-5,	-29,	-21,	-8,	3,	15,	10,	20,	18,	18,	1,	1,	17,	0,	-13,	7,	0,	6,	-7,	-28,	-8,	-11,	-6,	-29,	27,	43,	23,	28,	-3,	0,	-11,	18,	-54,	13,	34,	-1,	-8,	0,	30,	14,	-6,	7},
{	-9,	-22,	0,	-33,	6,	10,	-24,	-1,	10,	8,	22,	-19,	17,	-26,	15,	9,	5,	-7,	-14,	-12,	5,	-22,	-13,	-1,	13,	1,	-34,	7,	-32,	16,	-19,	-36,	-13,	35,	15,	-12,	-7,	7,	12,	34,	-24,	25,	25,	0,	-29,	14,	30,	-5,	-2,	-19},
{	6,	-14,	-24,	-5,	38,	-9,	-11,	-15,	-8,	4,	8,	-4,	30,	-91,	49,	17,	-13,	-32,	-13,	14,	3,	3,	5,	-19,	-14,	-24,	-22,	17,	22,	-7,	-43,	-14,	-13,	4,	-5,	-17,	0,	13,	-2,	-32,	-24,	-68,	-52,	-25,	11,	-2,	23,	16,	2,	-10},
{	4,	-6,	7,	15,	-14,	0,	-38,	18,	-7,	5,	4,	14,	6,	23,	3,	10,	14,	-11,	31,	1,	-33,	-11,	9,	-18,	-24,	-9,	4,	-22,	-8,	-9,	-14,	37,	-24,	3,	-21,	17,	-24,	6,	-10,	-5,	-7,	14,	-10,	21,	-18,	-3,	18,	-12,	-13,	2},
{	2,	-5,	22,	23,	-30,	-11,	14,	3,	8,	15,	-20,	-24,	3,	-25,	11,	16,	-2,	22,	-19,	4,	-12,	10,	27,	-2,	6,	-11,	-28,	11,	27,	1,	-4,	-13,	-10,	-4,	-22,	-3,	-14,	-36,	21,	-7,	-6,	-2,	12,	26,	14,	16,	-7,	2,	-4,	20},
{	-8,	37,	-18,	-9,	11,	-14,	-11,	19,	-21,	11,	12,	-40,	9,	-12,	9,	-9,	-24,	16,	-13,	-6,	16,	-10,	22,	20,	-24,	19,	1,	-5,	-43,	5,	-23,	30,	1,	8,	1,	29,	-23,	28,	23,	5,	-9,	-20,	-25,	-12,	24,	16,	-21,	26,	-20,	11},
{	0,	14,	15,	-77,	2,	29,	-2,	-23,	10,	21,	22,	-3,	-20,	-31,	18,	-16,	31,	37,	18,	16,	-5,	-43,	15,	2,	-9,	-6,	13,	-31,	-14,	4,	-34,	11,	3,	-1,	-11,	-10,	8,	-10,	-12,	-16,	-27,	-13,	-39,	28,	-32,	43,	16,	10,	5,	11},
{	37,	4,	-30,	-31,	5,	-17,	-20,	-6,	3,	39,	-10,	2,	-36,	-3,	-31,	-33,	5,	18,	-14,	15,	4,	30,	12,	-11,	10,	-36,	8,	30,	6,	-21,	-26,	-1,	14,	-13,	14,	-9,	-13,	-22,	-29,	-23,	-34,	-43,	7,	11,	-12,	21,	-6,	-25,	10,	-13},
{	19,	42,	-20,	-21,	-5,	-16,	-40,	18,	-48,	12,	-21,	-8,	10,	-2,	11,	-2,	-30,	-14,	-15,	9,	-7,	-14,	-8,	-25,	-8,	28,	-4,	15,	-43,	-3,	-31,	20,	2,	20,	16,	-23,	-9,	24,	-55,	-14,	-6,	-29,	-18,	10,	4,	4,	-19,	1,	12,	-10},
{	8,	-12,	-1,	-27,	10,	-15,	-34,	-27,	-2,	25,	11,	31,	10,	18,	-16,	18,	8,	-4,	28,	8,	-33,	10,	-20,	20,	-5,	-2,	2,	-25,	-13,	-11,	12,	-1,	1,	35,	-1,	-5,	46,	5,	21,	-4,	-10,	6,	-41,	-1,	-8,	-10,	19,	-31,	21,	-25},
{	12,	-17,	-21,	42,	-27,	-13,	19,	-28,	-8,	-21,	-19,	21,	-8,	-37,	-8,	-47,	48,	22,	-9,	-3,	12,	-54,	24,	4,	21,	-1,	13,	-3,	-5,	25,	-5,	28,	4,	-36,	-22,	-8,	0,	0,	-27,	0,	-8,	5,	-28,	-23,	21,	-9,	-45,	-11,	-25,	1},
{	-20,	15,	4,	7,	7,	-5,	17,	31,	-5,	-5,	-9,	15,	7,	-66,	-38,	27,	-17,	-41,	23,	-21,	2,	-9,	-11,	-14,	-4,	29,	8,	6,	26,	-40,	9,	22,	20,	1,	-24,	19,	4,	-31,	-5,	-6,	-15,	-76,	-34,	14,	-16,	-35,	7,	6,	-25,	27},
{	31,	13,	2,	11,	26,	-13,	23,	-11,	3,	1,	0,	-7,	12,	6,	-25,	11,	3,	-9,	-4,	33,	-23,	5,	16,	44,	10,	4,	-3,	-17,	9,	8,	4,	-29,	8,	-10,	24,	1,	42,	6,	1,	24,	-23,	11,	0,	11,	32,	7,	1,	6,	-10,	-12},
{	2,	-2,	-4,	-15,	18,	6,	1,	-6,	7,	15,	-6,	14,	-2,	-4,	16,	-43,	29,	-22,	-2,	-2,	-6,	-5,	5,	10,	-12,	7,	23,	12,	10,	25,	22,	35,	35,	-8,	24,	-5,	19,	-13,	-10,	28,	20,	11,	6,	-6,	0,	26,	18,	-3,	-22,	7},
{	-23,	-1,	14,	8,	-2,	0,	7,	-11,	25,	25,	-15,	6,	-42,	-3,	7,	21,	-11,	-16,	-4,	12,	31,	-32,	-31,	20,	4,	-13,	23,	0,	-37,	-34,	30,	-13,	4,	2,	3,	2,	14,	4,	-49,	-18,	-15,	12,	-27,	19,	8,	-8,	-4,	-9,	18,	14},
{	2,	8,	-9,	-52,	14,	-33,	32,	-7,	-5,	6,	3,	1,	2,	-36,	-12,	-19,	-17,	9,	-10,	-11,	-2,	11,	29,	23,	-5,	6,	-21,	4,	0,	29,	-29,	-31,	3,	5,	0,	-2,	-7,	2,	-2,	14,	11,	7,	-5,	-9,	27,	-8,	-12,	35,	-3,	9},
{	-20,	-23,	25,	-11,	1,	14,	-3,	-25,	-30,	-12,	19,	16,	-8,	-11,	-19,	16,	25,	40,	1,	-44,	36,	-4,	-23,	14,	24,	-9,	5,	-21,	-16,	2,	0,	-13,	11,	1,	17,	1,	31,	-11,	36,	10,	-28,	-13,	-23,	7,	24,	-6,	-6,	15,	-17,	11},
{	20,	-16,	-10,	7,	26,	-20,	-5,	31,	13,	-30,	19,	-51,	36,	11,	-22,	33,	48,	-18,	-1,	-5,	0,	23,	3,	-12,	-9,	12,	13,	0,	-64,	-8,	-10,	-3,	21,	46,	-10,	12,	-3,	-6,	31,	-16,	12,	30,	-5,	3,	-6,	11,	-4,	-8,	14,	-21},
{	-4,	-5,	29,	-23,	51,	10,	3,	-7,	1,	26,	-6,	-29,	-12,	13,	-1,	27,	21,	-25,	-8,	-23,	2,	-15,	-10,	-20,	27,	-10,	20,	-15,	13,	-21,	-24,	11,	9,	5,	-12,	29,	29,	-5,	-3,	-29,	-71,	-6,	51,	-19,	38,	32,	-22,	-34,	-26,	-10},
{	-48,	20,	-12,	4,	-12,	33,	-16,	7,	19,	-32,	19,	-8,	-24,	-2,	-47,	26,	-38,	25,	12,	20,	-15,	21,	-1,	17,	5,	20,	-75,	-6,	5,	-2,	-62,	14,	-11,	6,	-20,	-2,	-12,	-15,	3,	26,	-49,	-27,	-63,	-16,	22,	-11,	13,	34,	17,	14},
{	29,	-12,	-3,	-4,	-15,	1,	10,	-69,	11,	60,	-24,	25,	27,	-62,	-33,	-13,	-26,	-45,	26,	13,	-27,	22,	6,	-16,	-17,	-5,	-24,	-18,	21,	4,	-54,	-36,	-17,	14,	-3,	-8,	40,	-48,	3,	-70,	-2,	-16,	-42,	39,	28,	-7,	-12,	1,	11,	9},
{	-3,	6,	7,	-25,	43,	-4,	-25,	0,	-5,	16,	-7,	13,	5,	18,	0,	-46,	24,	-9,	-51,	-25,	9,	3,	10,	-19,	14,	-5,	-18,	-21,	-11,	-12,	6,	17,	20,	22,	-8,	-10,	-9,	22,	-3,	-9,	19,	-4,	-1,	8,	-7,	11,	19,	-9,	-15,	-10},
{	-6,	14,	20,	-41,	3,	47,	-3,	11,	-5,	-25,	-15,	4,	-51,	23,	-76,	6,	0,	-15,	16,	3,	36,	24,	26,	-20,	6,	35,	-57,	13,	2,	-58,	-27,	4,	10,	14,	5,	23,	24,	18,	7,	15,	29,	17,	-5,	37,	34,	-2,	19,	50,	-24,	-2},
{	8,	12,	21,	11,	15,	-22,	2,	-21,	26,	-2,	-24,	-4,	-31,	-25,	-28,	-3,	-5,	13,	-3,	23,	9,	-11,	33,	-7,	8,	2,	-19,	12,	-15,	0,	5,	-3,	17,	5,	12,	10,	-2,	14,	-1,	-8,	24,	-6,	14,	31,	2,	-8,	23,	26,	-13,	-7},
{	1,	41,	-13,	16,	3,	-2,	56,	8,	4,	6,	3,	-24,	23,	13,	45,	-33,	-37,	-54,	0,	53,	-12,	25,	-53,	27,	0,	-23,	-30,	-30,	-25,	-10,	11,	5,	30,	11,	-4,	-15,	-10,	-30,	-7,	-15,	-24,	3,	22,	-11,	-28,	59,	52,	17,	2,	-45},
{	-51,	7,	15,	6,	-12,	5,	43,	70,	69,	11,	3,	5,	41,	55,	5,	-32,	-15,	-6,	18,	-2,	-22,	36,	-17,	0,	-8,	-12,	-40,	12,	-2,	22,	15,	-4,	-4,	-7,	-15,	-1,	28,	47,	4,	-61,	5,	19,	11,	-11,	8,	2,	-29,	53,	-2,	55},
{	9,	27,	2,	0,	-30,	39,	35,	2,	-43,	0,	-23,	38,	5,	40,	7,	-40,	18,	15,	-5,	23,	-11,	3,	23,	-6,	-44,	-30,	-18,	25,	17,	-6,	5,	11,	2,	-25,	-9,	33,	20,	31,	29,	49,	3,	-14,	58,	-20,	50,	-14,	13,	4,	2,	-30}};

int fc1_b[50] = {	50,	-51,	-35,	97,	-4,	45,	22,	-5,	-40,	-9,	2,	12,	97,	-2,	85,	13,	-53,	8,	-13,	40,	39,	39,	-29,	91,	56,	61,	27,	23,	4,	55,	73,	-19,	-61,	3,	104,	-71,	47,	57,	17,	-88,	53,	-29,	57,	-26,	-91,	56,	71,	-61,	-3,	22};

int fc2_k[50][10] = {{	-5,	33,	30,	-17,	-10,	-23,	18,	-15,	5,	-7},
{	-16,	-19,	-4,	39,	-21,	18,	-2,	-28,	18,	-36},
{	-8,	-37,	-14,	11,	28,	-9,	-8,	5,	-2,	20},
{	12,	65,	-19,	-61,	13,	1,	33,	-20,	-36,	-16},
{	46,	9,	28,	-24,	25,	-47,	-26,	-7,	23,	-12},
{	50,	31,	44,	-16,	-19,	-20,	-57,	20,	-68,	-16},
{	-19,	-12,	2,	-37,	46,	-14,	21,	33,	-20,	-21},
{	-42,	-26,	-43,	21,	15,	29,	-47,	25,	-3,	35},
{	37,	4,	1,	-12,	-29,	-36,	1,	17,	73,	2},
{	-34,	-5,	32,	31,	7,	-17,	-30,	-5,	-5,	14},
{	-51,	-37,	13,	58,	-16,	-9,	-23,	-22,	23,	-25},
{	-34,	38,	-42,	-23,	-14,	-4,	-4,	2,	-13,	48},
{	-25,	53,	-15,	-14,	31,	-27,	-43,	4,	-35,	18},
{	-54,	-36,	-35,	41,	-6,	31,	-12,	-29,	-7,	-9},
{	5,	57,	43,	0,	-23,	27,	-13,	25,	-26,	-5},
{	-39,	-22,	-4,	-25,	-42,	4,	71,	-58,	-29,	35},
{	45,	-4,	-5,	-22,	-20,	-41,	-16,	26,	30,	11},
{	22,	-40,	-27,	-11,	9,	30,	3,	-27,	-11,	13},
{	-19,	-40,	-31,	-2,	-37,	-4,	-18,	14,	24,	-47},
{	-44,	40,	-1,	28,	-37,	8,	-12,	12,	9,	-54},
{	-23,	4,	9,	11,	-33,	11,	18,	53,	-14,	-28},
{	-4,	29,	24,	21,	7,	21,	4,	2,	-54,	0},
{	2,	-13,	41,	-17,	-32,	18,	32,	-25,	-11,	6},
{	-7,	30,	-31,	-18,	41,	-10,	24,	35,	-8,	-10},
{	1,	-8,	26,	-12,	20,	0,	-36,	0,	-1,	-68},
{	-39,	18,	-5,	14,	21,	-12,	-25,	25,	-54,	55},
{	40,	24,	-42,	-33,	-60,	-30,	-67,	49,	2,	12},
{	-13,	-23,	-12,	-61,	3,	11,	27,	29,	25,	-31},
{	4,	-50,	-39,	-7,	31,	-7,	-54,	-17,	-33,	6},
{	-45,	20,	33,	-13,	-9,	15,	55,	-46,	-27,	-40},
{	-39,	36,	-63,	-8,	-34,	-55,	-17,	-75,	-36,	-27},
{	31,	-10,	-21,	16,	-40,	-1,	-11,	18,	-8,	13},
{	4,	-30,	-6,	20,	7,	-38,	9,	4,	16,	-10},
{	-25,	1,	25,	-24,	9,	31,	-42,	7,	35,	-32},
{	-4,	26,	-39,	-53,	15,	29,	2,	-18,	-31,	-11},
{	27,	-32,	-7,	-26,	-44,	19,	-10,	-20,	23,	-17},
{	13,	29,	-5,	-20,	54,	12,	24,	-32,	-9,	35},
{	54,	45,	-14,	-26,	-18,	0,	-13,	2,	-58,	46},
{	0,	25,	-15,	-9,	-34,	-18,	42,	-29,	31,	-68},
{	32,	-45,	-16,	10,	18,	17,	59,	-42,	16,	18},
{	-116,	69,	-14,	12,	-43,	-13,	-47,	-28,	-27,	-39},
{	10,	-16,	-25,	-26,	25,	-7,	-10,	-7,	37,	5},
{	-29,	53,	-22,	33,	-56,	54,	-34,	-7,	17,	-12},
{	-25,	-4,	7,	30,	12,	23,	-14,	19,	22,	9},
{	18,	-23,	17,	11,	8,	12,	26,	-49,	22,	3},
{	5,	10,	31,	29,	21,	-26,	-10,	34,	-24,	3},
{	-18,	9,	12,	-5,	3,	20,	45,	20,	-15,	-18},
{	11,	34,	-32,	8,	-12,	-5,	34,	-40,	26,	-16},
{	28,	13,	-18,	1,	-29,	-2,	24,	29,	23,	-33},
{	-29,	-32,	-35,	-29,	-6,	29,	-18,	20,	-16,	45}};

int fc2_b[10] = {	-3190,	12040,	-353,	-2180,	5337,	2602,	-952,	4349,	-7871,	-2212};




#endif

#if FC_COMPUTATION_TYPE == 0
// Computes a fully connected layer's output
// Uses the above global constant weights,
// and modifies the result array in place
template <int IN_SIZE, int OUT_SIZE>
inline void fc_computation(	const int weights[IN_SIZE][OUT_SIZE], const int biases[OUT_SIZE],
							int in[IN_SIZE], int out[OUT_SIZE]){
	long int partialSum;
	for (int j=0; j<OUT_SIZE; j++){
		partialSum = 0;
		for (int i=0; i<IN_SIZE; i++){
			partialSum += in[i]*weights[i][j];
		}
		out[j] = partialSum + biases[j];
	}
	return;
}

#elif FC_COMPUTATION_TYPE == 1
inline void fc_1(int in[27], int out[50]){
	out[0] =
		in[0]*(fc1_k[0][0]) +
		in[1]*(fc1_k[1][0]) +
		in[2]*(fc1_k[2][0]) +
		in[3]*(fc1_k[3][0]) +
		in[4]*(fc1_k[4][0]) +
		in[5]*(fc1_k[5][0]) +
		in[6]*(fc1_k[6][0]) +
		in[7]*(fc1_k[7][0]) +
		in[8]*(fc1_k[8][0]) +
		in[9]*(fc1_k[9][0]) +
		in[10]*(fc1_k[10][0]) +
		in[11]*(fc1_k[11][0]) +
		in[12]*(fc1_k[12][0]) +
		in[13]*(fc1_k[13][0]) +
		in[14]*(fc1_k[14][0]) +
		in[15]*(fc1_k[15][0]) +
		in[16]*(fc1_k[16][0]) +
		in[17]*(fc1_k[17][0]) +
		in[18]*(fc1_k[18][0]) +
		in[19]*(fc1_k[19][0]) +
		in[20]*(fc1_k[20][0]) +
		in[21]*(fc1_k[21][0]) +
		in[22]*(fc1_k[22][0]) +
		in[23]*(fc1_k[23][0]) +
		in[24]*(fc1_k[24][0]) +
		in[25]*(fc1_k[25][0]) +
		in[26]*(fc1_k[26][0]) +
		(fc1_b[0]);
	out[1] =
		in[0]*(fc1_k[0][1]) +
		in[1]*(fc1_k[1][1]) +
		in[2]*(fc1_k[2][1]) +
		in[3]*(fc1_k[3][1]) +
		in[4]*(fc1_k[4][1]) +
		in[5]*(fc1_k[5][1]) +
		in[6]*(fc1_k[6][1]) +
		in[7]*(fc1_k[7][1]) +
		in[8]*(fc1_k[8][1]) +
		in[9]*(fc1_k[9][1]) +
		in[10]*(fc1_k[10][1]) +
		in[11]*(fc1_k[11][1]) +
		in[12]*(fc1_k[12][1]) +
		in[13]*(fc1_k[13][1]) +
		in[14]*(fc1_k[14][1]) +
		in[15]*(fc1_k[15][1]) +
		in[16]*(fc1_k[16][1]) +
		in[17]*(fc1_k[17][1]) +
		in[18]*(fc1_k[18][1]) +
		in[19]*(fc1_k[19][1]) +
		in[20]*(fc1_k[20][1]) +
		in[21]*(fc1_k[21][1]) +
		in[22]*(fc1_k[22][1]) +
		in[23]*(fc1_k[23][1]) +
		in[24]*(fc1_k[24][1]) +
		in[25]*(fc1_k[25][1]) +
		in[26]*(fc1_k[26][1]) +
		(fc1_b[1]);
	out[2] =
		in[0]*(fc1_k[0][2]) +
		in[1]*(fc1_k[1][2]) +
		in[2]*(fc1_k[2][2]) +
		in[3]*(fc1_k[3][2]) +
		in[4]*(fc1_k[4][2]) +
		in[5]*(fc1_k[5][2]) +
		in[6]*(fc1_k[6][2]) +
		in[7]*(fc1_k[7][2]) +
		in[8]*(fc1_k[8][2]) +
		in[9]*(fc1_k[9][2]) +
		in[10]*(fc1_k[10][2]) +
		in[11]*(fc1_k[11][2]) +
		in[12]*(fc1_k[12][2]) +
		in[13]*(fc1_k[13][2]) +
		in[14]*(fc1_k[14][2]) +
		in[15]*(fc1_k[15][2]) +
		in[16]*(fc1_k[16][2]) +
		in[17]*(fc1_k[17][2]) +
		in[18]*(fc1_k[18][2]) +
		in[19]*(fc1_k[19][2]) +
		in[20]*(fc1_k[20][2]) +
		in[21]*(fc1_k[21][2]) +
		in[22]*(fc1_k[22][2]) +
		in[23]*(fc1_k[23][2]) +
		in[24]*(fc1_k[24][2]) +
		in[25]*(fc1_k[25][2]) +
		in[26]*(fc1_k[26][2]) +
		(fc1_b[2]);
	out[3] =
		in[0]*(fc1_k[0][3]) +
		in[1]*(fc1_k[1][3]) +
		in[2]*(fc1_k[2][3]) +
		in[3]*(fc1_k[3][3]) +
		in[4]*(fc1_k[4][3]) +
		in[5]*(fc1_k[5][3]) +
		in[6]*(fc1_k[6][3]) +
		in[7]*(fc1_k[7][3]) +
		in[8]*(fc1_k[8][3]) +
		in[9]*(fc1_k[9][3]) +
		in[10]*(fc1_k[10][3]) +
		in[11]*(fc1_k[11][3]) +
		in[12]*(fc1_k[12][3]) +
		in[13]*(fc1_k[13][3]) +
		in[14]*(fc1_k[14][3]) +
		in[15]*(fc1_k[15][3]) +
		in[16]*(fc1_k[16][3]) +
		in[17]*(fc1_k[17][3]) +
		in[18]*(fc1_k[18][3]) +
		in[19]*(fc1_k[19][3]) +
		in[20]*(fc1_k[20][3]) +
		in[21]*(fc1_k[21][3]) +
		in[22]*(fc1_k[22][3]) +
		in[23]*(fc1_k[23][3]) +
		in[24]*(fc1_k[24][3]) +
		in[25]*(fc1_k[25][3]) +
		in[26]*(fc1_k[26][3]) +
		(fc1_b[3]);
	out[4] =
		in[0]*(fc1_k[0][4]) +
		in[1]*(fc1_k[1][4]) +
		in[2]*(fc1_k[2][4]) +
		in[3]*(fc1_k[3][4]) +
		in[4]*(fc1_k[4][4]) +
		in[5]*(fc1_k[5][4]) +
		in[6]*(fc1_k[6][4]) +
		in[7]*(fc1_k[7][4]) +
		in[8]*(fc1_k[8][4]) +
		in[9]*(fc1_k[9][4]) +
		in[10]*(fc1_k[10][4]) +
		in[11]*(fc1_k[11][4]) +
		in[12]*(fc1_k[12][4]) +
		in[13]*(fc1_k[13][4]) +
		in[14]*(fc1_k[14][4]) +
		in[15]*(fc1_k[15][4]) +
		in[16]*(fc1_k[16][4]) +
		in[17]*(fc1_k[17][4]) +
		in[18]*(fc1_k[18][4]) +
		in[19]*(fc1_k[19][4]) +
		in[20]*(fc1_k[20][4]) +
		in[21]*(fc1_k[21][4]) +
		in[22]*(fc1_k[22][4]) +
		in[23]*(fc1_k[23][4]) +
		in[24]*(fc1_k[24][4]) +
		in[25]*(fc1_k[25][4]) +
		in[26]*(fc1_k[26][4]) +
		(fc1_b[4]);
	out[5] =
		in[0]*(fc1_k[0][5]) +
		in[1]*(fc1_k[1][5]) +
		in[2]*(fc1_k[2][5]) +
		in[3]*(fc1_k[3][5]) +
		in[4]*(fc1_k[4][5]) +
		in[5]*(fc1_k[5][5]) +
		in[6]*(fc1_k[6][5]) +
		in[7]*(fc1_k[7][5]) +
		in[8]*(fc1_k[8][5]) +
		in[9]*(fc1_k[9][5]) +
		in[10]*(fc1_k[10][5]) +
		in[11]*(fc1_k[11][5]) +
		in[12]*(fc1_k[12][5]) +
		in[13]*(fc1_k[13][5]) +
		in[14]*(fc1_k[14][5]) +
		in[15]*(fc1_k[15][5]) +
		in[16]*(fc1_k[16][5]) +
		in[17]*(fc1_k[17][5]) +
		in[18]*(fc1_k[18][5]) +
		in[19]*(fc1_k[19][5]) +
		in[20]*(fc1_k[20][5]) +
		in[21]*(fc1_k[21][5]) +
		in[22]*(fc1_k[22][5]) +
		in[23]*(fc1_k[23][5]) +
		in[24]*(fc1_k[24][5]) +
		in[25]*(fc1_k[25][5]) +
		in[26]*(fc1_k[26][5]) +
		(fc1_b[5]);
	out[6] =
		in[0]*(fc1_k[0][6]) +
		in[1]*(fc1_k[1][6]) +
		in[2]*(fc1_k[2][6]) +
		in[3]*(fc1_k[3][6]) +
		in[4]*(fc1_k[4][6]) +
		in[5]*(fc1_k[5][6]) +
		in[6]*(fc1_k[6][6]) +
		in[7]*(fc1_k[7][6]) +
		in[8]*(fc1_k[8][6]) +
		in[9]*(fc1_k[9][6]) +
		in[10]*(fc1_k[10][6]) +
		in[11]*(fc1_k[11][6]) +
		in[12]*(fc1_k[12][6]) +
		in[13]*(fc1_k[13][6]) +
		in[14]*(fc1_k[14][6]) +
		in[15]*(fc1_k[15][6]) +
		in[16]*(fc1_k[16][6]) +
		in[17]*(fc1_k[17][6]) +
		in[18]*(fc1_k[18][6]) +
		in[19]*(fc1_k[19][6]) +
		in[20]*(fc1_k[20][6]) +
		in[21]*(fc1_k[21][6]) +
		in[22]*(fc1_k[22][6]) +
		in[23]*(fc1_k[23][6]) +
		in[24]*(fc1_k[24][6]) +
		in[25]*(fc1_k[25][6]) +
		in[26]*(fc1_k[26][6]) +
		(fc1_b[6]);
	out[7] =
		in[0]*(fc1_k[0][7]) +
		in[1]*(fc1_k[1][7]) +
		in[2]*(fc1_k[2][7]) +
		in[3]*(fc1_k[3][7]) +
		in[4]*(fc1_k[4][7]) +
		in[5]*(fc1_k[5][7]) +
		in[6]*(fc1_k[6][7]) +
		in[7]*(fc1_k[7][7]) +
		in[8]*(fc1_k[8][7]) +
		in[9]*(fc1_k[9][7]) +
		in[10]*(fc1_k[10][7]) +
		in[11]*(fc1_k[11][7]) +
		in[12]*(fc1_k[12][7]) +
		in[13]*(fc1_k[13][7]) +
		in[14]*(fc1_k[14][7]) +
		in[15]*(fc1_k[15][7]) +
		in[16]*(fc1_k[16][7]) +
		in[17]*(fc1_k[17][7]) +
		in[18]*(fc1_k[18][7]) +
		in[19]*(fc1_k[19][7]) +
		in[20]*(fc1_k[20][7]) +
		in[21]*(fc1_k[21][7]) +
		in[22]*(fc1_k[22][7]) +
		in[23]*(fc1_k[23][7]) +
		in[24]*(fc1_k[24][7]) +
		in[25]*(fc1_k[25][7]) +
		in[26]*(fc1_k[26][7]) +
		(fc1_b[7]);
	out[8] =
		in[0]*(fc1_k[0][8]) +
		in[1]*(fc1_k[1][8]) +
		in[2]*(fc1_k[2][8]) +
		in[3]*(fc1_k[3][8]) +
		in[4]*(fc1_k[4][8]) +
		in[5]*(fc1_k[5][8]) +
		in[6]*(fc1_k[6][8]) +
		in[7]*(fc1_k[7][8]) +
		in[8]*(fc1_k[8][8]) +
		in[9]*(fc1_k[9][8]) +
		in[10]*(fc1_k[10][8]) +
		in[11]*(fc1_k[11][8]) +
		in[12]*(fc1_k[12][8]) +
		in[13]*(fc1_k[13][8]) +
		in[14]*(fc1_k[14][8]) +
		in[15]*(fc1_k[15][8]) +
		in[16]*(fc1_k[16][8]) +
		in[17]*(fc1_k[17][8]) +
		in[18]*(fc1_k[18][8]) +
		in[19]*(fc1_k[19][8]) +
		in[20]*(fc1_k[20][8]) +
		in[21]*(fc1_k[21][8]) +
		in[22]*(fc1_k[22][8]) +
		in[23]*(fc1_k[23][8]) +
		in[24]*(fc1_k[24][8]) +
		in[25]*(fc1_k[25][8]) +
		in[26]*(fc1_k[26][8]) +
		(fc1_b[8]);
	out[9] =
		in[0]*(fc1_k[0][9]) +
		in[1]*(fc1_k[1][9]) +
		in[2]*(fc1_k[2][9]) +
		in[3]*(fc1_k[3][9]) +
		in[4]*(fc1_k[4][9]) +
		in[5]*(fc1_k[5][9]) +
		in[6]*(fc1_k[6][9]) +
		in[7]*(fc1_k[7][9]) +
		in[8]*(fc1_k[8][9]) +
		in[9]*(fc1_k[9][9]) +
		in[10]*(fc1_k[10][9]) +
		in[11]*(fc1_k[11][9]) +
		in[12]*(fc1_k[12][9]) +
		in[13]*(fc1_k[13][9]) +
		in[14]*(fc1_k[14][9]) +
		in[15]*(fc1_k[15][9]) +
		in[16]*(fc1_k[16][9]) +
		in[17]*(fc1_k[17][9]) +
		in[18]*(fc1_k[18][9]) +
		in[19]*(fc1_k[19][9]) +
		in[20]*(fc1_k[20][9]) +
		in[21]*(fc1_k[21][9]) +
		in[22]*(fc1_k[22][9]) +
		in[23]*(fc1_k[23][9]) +
		in[24]*(fc1_k[24][9]) +
		in[25]*(fc1_k[25][9]) +
		in[26]*(fc1_k[26][9]) +
		(fc1_b[9]);
	out[10] =
		in[0]*(fc1_k[0][10]) +
		in[1]*(fc1_k[1][10]) +
		in[2]*(fc1_k[2][10]) +
		in[3]*(fc1_k[3][10]) +
		in[4]*(fc1_k[4][10]) +
		in[5]*(fc1_k[5][10]) +
		in[6]*(fc1_k[6][10]) +
		in[7]*(fc1_k[7][10]) +
		in[8]*(fc1_k[8][10]) +
		in[9]*(fc1_k[9][10]) +
		in[10]*(fc1_k[10][10]) +
		in[11]*(fc1_k[11][10]) +
		in[12]*(fc1_k[12][10]) +
		in[13]*(fc1_k[13][10]) +
		in[14]*(fc1_k[14][10]) +
		in[15]*(fc1_k[15][10]) +
		in[16]*(fc1_k[16][10]) +
		in[17]*(fc1_k[17][10]) +
		in[18]*(fc1_k[18][10]) +
		in[19]*(fc1_k[19][10]) +
		in[20]*(fc1_k[20][10]) +
		in[21]*(fc1_k[21][10]) +
		in[22]*(fc1_k[22][10]) +
		in[23]*(fc1_k[23][10]) +
		in[24]*(fc1_k[24][10]) +
		in[25]*(fc1_k[25][10]) +
		in[26]*(fc1_k[26][10]) +
		(fc1_b[10]);
	out[11] =
		in[0]*(fc1_k[0][11]) +
		in[1]*(fc1_k[1][11]) +
		in[2]*(fc1_k[2][11]) +
		in[3]*(fc1_k[3][11]) +
		in[4]*(fc1_k[4][11]) +
		in[5]*(fc1_k[5][11]) +
		in[6]*(fc1_k[6][11]) +
		in[7]*(fc1_k[7][11]) +
		in[8]*(fc1_k[8][11]) +
		in[9]*(fc1_k[9][11]) +
		in[10]*(fc1_k[10][11]) +
		in[11]*(fc1_k[11][11]) +
		in[12]*(fc1_k[12][11]) +
		in[13]*(fc1_k[13][11]) +
		in[14]*(fc1_k[14][11]) +
		in[15]*(fc1_k[15][11]) +
		in[16]*(fc1_k[16][11]) +
		in[17]*(fc1_k[17][11]) +
		in[18]*(fc1_k[18][11]) +
		in[19]*(fc1_k[19][11]) +
		in[20]*(fc1_k[20][11]) +
		in[21]*(fc1_k[21][11]) +
		in[22]*(fc1_k[22][11]) +
		in[23]*(fc1_k[23][11]) +
		in[24]*(fc1_k[24][11]) +
		in[25]*(fc1_k[25][11]) +
		in[26]*(fc1_k[26][11]) +
		(fc1_b[11]);
	out[12] =
		in[0]*(fc1_k[0][12]) +
		in[1]*(fc1_k[1][12]) +
		in[2]*(fc1_k[2][12]) +
		in[3]*(fc1_k[3][12]) +
		in[4]*(fc1_k[4][12]) +
		in[5]*(fc1_k[5][12]) +
		in[6]*(fc1_k[6][12]) +
		in[7]*(fc1_k[7][12]) +
		in[8]*(fc1_k[8][12]) +
		in[9]*(fc1_k[9][12]) +
		in[10]*(fc1_k[10][12]) +
		in[11]*(fc1_k[11][12]) +
		in[12]*(fc1_k[12][12]) +
		in[13]*(fc1_k[13][12]) +
		in[14]*(fc1_k[14][12]) +
		in[15]*(fc1_k[15][12]) +
		in[16]*(fc1_k[16][12]) +
		in[17]*(fc1_k[17][12]) +
		in[18]*(fc1_k[18][12]) +
		in[19]*(fc1_k[19][12]) +
		in[20]*(fc1_k[20][12]) +
		in[21]*(fc1_k[21][12]) +
		in[22]*(fc1_k[22][12]) +
		in[23]*(fc1_k[23][12]) +
		in[24]*(fc1_k[24][12]) +
		in[25]*(fc1_k[25][12]) +
		in[26]*(fc1_k[26][12]) +
		(fc1_b[12]);
	out[13] =
		in[0]*(fc1_k[0][13]) +
		in[1]*(fc1_k[1][13]) +
		in[2]*(fc1_k[2][13]) +
		in[3]*(fc1_k[3][13]) +
		in[4]*(fc1_k[4][13]) +
		in[5]*(fc1_k[5][13]) +
		in[6]*(fc1_k[6][13]) +
		in[7]*(fc1_k[7][13]) +
		in[8]*(fc1_k[8][13]) +
		in[9]*(fc1_k[9][13]) +
		in[10]*(fc1_k[10][13]) +
		in[11]*(fc1_k[11][13]) +
		in[12]*(fc1_k[12][13]) +
		in[13]*(fc1_k[13][13]) +
		in[14]*(fc1_k[14][13]) +
		in[15]*(fc1_k[15][13]) +
		in[16]*(fc1_k[16][13]) +
		in[17]*(fc1_k[17][13]) +
		in[18]*(fc1_k[18][13]) +
		in[19]*(fc1_k[19][13]) +
		in[20]*(fc1_k[20][13]) +
		in[21]*(fc1_k[21][13]) +
		in[22]*(fc1_k[22][13]) +
		in[23]*(fc1_k[23][13]) +
		in[24]*(fc1_k[24][13]) +
		in[25]*(fc1_k[25][13]) +
		in[26]*(fc1_k[26][13]) +
		(fc1_b[13]);
	out[14] =
		in[0]*(fc1_k[0][14]) +
		in[1]*(fc1_k[1][14]) +
		in[2]*(fc1_k[2][14]) +
		in[3]*(fc1_k[3][14]) +
		in[4]*(fc1_k[4][14]) +
		in[5]*(fc1_k[5][14]) +
		in[6]*(fc1_k[6][14]) +
		in[7]*(fc1_k[7][14]) +
		in[8]*(fc1_k[8][14]) +
		in[9]*(fc1_k[9][14]) +
		in[10]*(fc1_k[10][14]) +
		in[11]*(fc1_k[11][14]) +
		in[12]*(fc1_k[12][14]) +
		in[13]*(fc1_k[13][14]) +
		in[14]*(fc1_k[14][14]) +
		in[15]*(fc1_k[15][14]) +
		in[16]*(fc1_k[16][14]) +
		in[17]*(fc1_k[17][14]) +
		in[18]*(fc1_k[18][14]) +
		in[19]*(fc1_k[19][14]) +
		in[20]*(fc1_k[20][14]) +
		in[21]*(fc1_k[21][14]) +
		in[22]*(fc1_k[22][14]) +
		in[23]*(fc1_k[23][14]) +
		in[24]*(fc1_k[24][14]) +
		in[25]*(fc1_k[25][14]) +
		in[26]*(fc1_k[26][14]) +
		(fc1_b[14]);
	out[15] =
		in[0]*(fc1_k[0][15]) +
		in[1]*(fc1_k[1][15]) +
		in[2]*(fc1_k[2][15]) +
		in[3]*(fc1_k[3][15]) +
		in[4]*(fc1_k[4][15]) +
		in[5]*(fc1_k[5][15]) +
		in[6]*(fc1_k[6][15]) +
		in[7]*(fc1_k[7][15]) +
		in[8]*(fc1_k[8][15]) +
		in[9]*(fc1_k[9][15]) +
		in[10]*(fc1_k[10][15]) +
		in[11]*(fc1_k[11][15]) +
		in[12]*(fc1_k[12][15]) +
		in[13]*(fc1_k[13][15]) +
		in[14]*(fc1_k[14][15]) +
		in[15]*(fc1_k[15][15]) +
		in[16]*(fc1_k[16][15]) +
		in[17]*(fc1_k[17][15]) +
		in[18]*(fc1_k[18][15]) +
		in[19]*(fc1_k[19][15]) +
		in[20]*(fc1_k[20][15]) +
		in[21]*(fc1_k[21][15]) +
		in[22]*(fc1_k[22][15]) +
		in[23]*(fc1_k[23][15]) +
		in[24]*(fc1_k[24][15]) +
		in[25]*(fc1_k[25][15]) +
		in[26]*(fc1_k[26][15]) +
		(fc1_b[15]);
	out[16] =
		in[0]*(fc1_k[0][16]) +
		in[1]*(fc1_k[1][16]) +
		in[2]*(fc1_k[2][16]) +
		in[3]*(fc1_k[3][16]) +
		in[4]*(fc1_k[4][16]) +
		in[5]*(fc1_k[5][16]) +
		in[6]*(fc1_k[6][16]) +
		in[7]*(fc1_k[7][16]) +
		in[8]*(fc1_k[8][16]) +
		in[9]*(fc1_k[9][16]) +
		in[10]*(fc1_k[10][16]) +
		in[11]*(fc1_k[11][16]) +
		in[12]*(fc1_k[12][16]) +
		in[13]*(fc1_k[13][16]) +
		in[14]*(fc1_k[14][16]) +
		in[15]*(fc1_k[15][16]) +
		in[16]*(fc1_k[16][16]) +
		in[17]*(fc1_k[17][16]) +
		in[18]*(fc1_k[18][16]) +
		in[19]*(fc1_k[19][16]) +
		in[20]*(fc1_k[20][16]) +
		in[21]*(fc1_k[21][16]) +
		in[22]*(fc1_k[22][16]) +
		in[23]*(fc1_k[23][16]) +
		in[24]*(fc1_k[24][16]) +
		in[25]*(fc1_k[25][16]) +
		in[26]*(fc1_k[26][16]) +
		(fc1_b[16]);
	out[17] =
		in[0]*(fc1_k[0][17]) +
		in[1]*(fc1_k[1][17]) +
		in[2]*(fc1_k[2][17]) +
		in[3]*(fc1_k[3][17]) +
		in[4]*(fc1_k[4][17]) +
		in[5]*(fc1_k[5][17]) +
		in[6]*(fc1_k[6][17]) +
		in[7]*(fc1_k[7][17]) +
		in[8]*(fc1_k[8][17]) +
		in[9]*(fc1_k[9][17]) +
		in[10]*(fc1_k[10][17]) +
		in[11]*(fc1_k[11][17]) +
		in[12]*(fc1_k[12][17]) +
		in[13]*(fc1_k[13][17]) +
		in[14]*(fc1_k[14][17]) +
		in[15]*(fc1_k[15][17]) +
		in[16]*(fc1_k[16][17]) +
		in[17]*(fc1_k[17][17]) +
		in[18]*(fc1_k[18][17]) +
		in[19]*(fc1_k[19][17]) +
		in[20]*(fc1_k[20][17]) +
		in[21]*(fc1_k[21][17]) +
		in[22]*(fc1_k[22][17]) +
		in[23]*(fc1_k[23][17]) +
		in[24]*(fc1_k[24][17]) +
		in[25]*(fc1_k[25][17]) +
		in[26]*(fc1_k[26][17]) +
		(fc1_b[17]);
	out[18] =
		in[0]*(fc1_k[0][18]) +
		in[1]*(fc1_k[1][18]) +
		in[2]*(fc1_k[2][18]) +
		in[3]*(fc1_k[3][18]) +
		in[4]*(fc1_k[4][18]) +
		in[5]*(fc1_k[5][18]) +
		in[6]*(fc1_k[6][18]) +
		in[7]*(fc1_k[7][18]) +
		in[8]*(fc1_k[8][18]) +
		in[9]*(fc1_k[9][18]) +
		in[10]*(fc1_k[10][18]) +
		in[11]*(fc1_k[11][18]) +
		in[12]*(fc1_k[12][18]) +
		in[13]*(fc1_k[13][18]) +
		in[14]*(fc1_k[14][18]) +
		in[15]*(fc1_k[15][18]) +
		in[16]*(fc1_k[16][18]) +
		in[17]*(fc1_k[17][18]) +
		in[18]*(fc1_k[18][18]) +
		in[19]*(fc1_k[19][18]) +
		in[20]*(fc1_k[20][18]) +
		in[21]*(fc1_k[21][18]) +
		in[22]*(fc1_k[22][18]) +
		in[23]*(fc1_k[23][18]) +
		in[24]*(fc1_k[24][18]) +
		in[25]*(fc1_k[25][18]) +
		in[26]*(fc1_k[26][18]) +
		(fc1_b[18]);
	out[19] =
		in[0]*(fc1_k[0][19]) +
		in[1]*(fc1_k[1][19]) +
		in[2]*(fc1_k[2][19]) +
		in[3]*(fc1_k[3][19]) +
		in[4]*(fc1_k[4][19]) +
		in[5]*(fc1_k[5][19]) +
		in[6]*(fc1_k[6][19]) +
		in[7]*(fc1_k[7][19]) +
		in[8]*(fc1_k[8][19]) +
		in[9]*(fc1_k[9][19]) +
		in[10]*(fc1_k[10][19]) +
		in[11]*(fc1_k[11][19]) +
		in[12]*(fc1_k[12][19]) +
		in[13]*(fc1_k[13][19]) +
		in[14]*(fc1_k[14][19]) +
		in[15]*(fc1_k[15][19]) +
		in[16]*(fc1_k[16][19]) +
		in[17]*(fc1_k[17][19]) +
		in[18]*(fc1_k[18][19]) +
		in[19]*(fc1_k[19][19]) +
		in[20]*(fc1_k[20][19]) +
		in[21]*(fc1_k[21][19]) +
		in[22]*(fc1_k[22][19]) +
		in[23]*(fc1_k[23][19]) +
		in[24]*(fc1_k[24][19]) +
		in[25]*(fc1_k[25][19]) +
		in[26]*(fc1_k[26][19]) +
		(fc1_b[19]);
	out[20] =
		in[0]*(fc1_k[0][20]) +
		in[1]*(fc1_k[1][20]) +
		in[2]*(fc1_k[2][20]) +
		in[3]*(fc1_k[3][20]) +
		in[4]*(fc1_k[4][20]) +
		in[5]*(fc1_k[5][20]) +
		in[6]*(fc1_k[6][20]) +
		in[7]*(fc1_k[7][20]) +
		in[8]*(fc1_k[8][20]) +
		in[9]*(fc1_k[9][20]) +
		in[10]*(fc1_k[10][20]) +
		in[11]*(fc1_k[11][20]) +
		in[12]*(fc1_k[12][20]) +
		in[13]*(fc1_k[13][20]) +
		in[14]*(fc1_k[14][20]) +
		in[15]*(fc1_k[15][20]) +
		in[16]*(fc1_k[16][20]) +
		in[17]*(fc1_k[17][20]) +
		in[18]*(fc1_k[18][20]) +
		in[19]*(fc1_k[19][20]) +
		in[20]*(fc1_k[20][20]) +
		in[21]*(fc1_k[21][20]) +
		in[22]*(fc1_k[22][20]) +
		in[23]*(fc1_k[23][20]) +
		in[24]*(fc1_k[24][20]) +
		in[25]*(fc1_k[25][20]) +
		in[26]*(fc1_k[26][20]) +
		(fc1_b[20]);
	out[21] =
		in[0]*(fc1_k[0][21]) +
		in[1]*(fc1_k[1][21]) +
		in[2]*(fc1_k[2][21]) +
		in[3]*(fc1_k[3][21]) +
		in[4]*(fc1_k[4][21]) +
		in[5]*(fc1_k[5][21]) +
		in[6]*(fc1_k[6][21]) +
		in[7]*(fc1_k[7][21]) +
		in[8]*(fc1_k[8][21]) +
		in[9]*(fc1_k[9][21]) +
		in[10]*(fc1_k[10][21]) +
		in[11]*(fc1_k[11][21]) +
		in[12]*(fc1_k[12][21]) +
		in[13]*(fc1_k[13][21]) +
		in[14]*(fc1_k[14][21]) +
		in[15]*(fc1_k[15][21]) +
		in[16]*(fc1_k[16][21]) +
		in[17]*(fc1_k[17][21]) +
		in[18]*(fc1_k[18][21]) +
		in[19]*(fc1_k[19][21]) +
		in[20]*(fc1_k[20][21]) +
		in[21]*(fc1_k[21][21]) +
		in[22]*(fc1_k[22][21]) +
		in[23]*(fc1_k[23][21]) +
		in[24]*(fc1_k[24][21]) +
		in[25]*(fc1_k[25][21]) +
		in[26]*(fc1_k[26][21]) +
		(fc1_b[21]);
	out[22] =
		in[0]*(fc1_k[0][22]) +
		in[1]*(fc1_k[1][22]) +
		in[2]*(fc1_k[2][22]) +
		in[3]*(fc1_k[3][22]) +
		in[4]*(fc1_k[4][22]) +
		in[5]*(fc1_k[5][22]) +
		in[6]*(fc1_k[6][22]) +
		in[7]*(fc1_k[7][22]) +
		in[8]*(fc1_k[8][22]) +
		in[9]*(fc1_k[9][22]) +
		in[10]*(fc1_k[10][22]) +
		in[11]*(fc1_k[11][22]) +
		in[12]*(fc1_k[12][22]) +
		in[13]*(fc1_k[13][22]) +
		in[14]*(fc1_k[14][22]) +
		in[15]*(fc1_k[15][22]) +
		in[16]*(fc1_k[16][22]) +
		in[17]*(fc1_k[17][22]) +
		in[18]*(fc1_k[18][22]) +
		in[19]*(fc1_k[19][22]) +
		in[20]*(fc1_k[20][22]) +
		in[21]*(fc1_k[21][22]) +
		in[22]*(fc1_k[22][22]) +
		in[23]*(fc1_k[23][22]) +
		in[24]*(fc1_k[24][22]) +
		in[25]*(fc1_k[25][22]) +
		in[26]*(fc1_k[26][22]) +
		(fc1_b[22]);
	out[23] =
		in[0]*(fc1_k[0][23]) +
		in[1]*(fc1_k[1][23]) +
		in[2]*(fc1_k[2][23]) +
		in[3]*(fc1_k[3][23]) +
		in[4]*(fc1_k[4][23]) +
		in[5]*(fc1_k[5][23]) +
		in[6]*(fc1_k[6][23]) +
		in[7]*(fc1_k[7][23]) +
		in[8]*(fc1_k[8][23]) +
		in[9]*(fc1_k[9][23]) +
		in[10]*(fc1_k[10][23]) +
		in[11]*(fc1_k[11][23]) +
		in[12]*(fc1_k[12][23]) +
		in[13]*(fc1_k[13][23]) +
		in[14]*(fc1_k[14][23]) +
		in[15]*(fc1_k[15][23]) +
		in[16]*(fc1_k[16][23]) +
		in[17]*(fc1_k[17][23]) +
		in[18]*(fc1_k[18][23]) +
		in[19]*(fc1_k[19][23]) +
		in[20]*(fc1_k[20][23]) +
		in[21]*(fc1_k[21][23]) +
		in[22]*(fc1_k[22][23]) +
		in[23]*(fc1_k[23][23]) +
		in[24]*(fc1_k[24][23]) +
		in[25]*(fc1_k[25][23]) +
		in[26]*(fc1_k[26][23]) +
		(fc1_b[23]);
	out[24] =
		in[0]*(fc1_k[0][24]) +
		in[1]*(fc1_k[1][24]) +
		in[2]*(fc1_k[2][24]) +
		in[3]*(fc1_k[3][24]) +
		in[4]*(fc1_k[4][24]) +
		in[5]*(fc1_k[5][24]) +
		in[6]*(fc1_k[6][24]) +
		in[7]*(fc1_k[7][24]) +
		in[8]*(fc1_k[8][24]) +
		in[9]*(fc1_k[9][24]) +
		in[10]*(fc1_k[10][24]) +
		in[11]*(fc1_k[11][24]) +
		in[12]*(fc1_k[12][24]) +
		in[13]*(fc1_k[13][24]) +
		in[14]*(fc1_k[14][24]) +
		in[15]*(fc1_k[15][24]) +
		in[16]*(fc1_k[16][24]) +
		in[17]*(fc1_k[17][24]) +
		in[18]*(fc1_k[18][24]) +
		in[19]*(fc1_k[19][24]) +
		in[20]*(fc1_k[20][24]) +
		in[21]*(fc1_k[21][24]) +
		in[22]*(fc1_k[22][24]) +
		in[23]*(fc1_k[23][24]) +
		in[24]*(fc1_k[24][24]) +
		in[25]*(fc1_k[25][24]) +
		in[26]*(fc1_k[26][24]) +
		(fc1_b[24]);
	out[25] =
		in[0]*(fc1_k[0][25]) +
		in[1]*(fc1_k[1][25]) +
		in[2]*(fc1_k[2][25]) +
		in[3]*(fc1_k[3][25]) +
		in[4]*(fc1_k[4][25]) +
		in[5]*(fc1_k[5][25]) +
		in[6]*(fc1_k[6][25]) +
		in[7]*(fc1_k[7][25]) +
		in[8]*(fc1_k[8][25]) +
		in[9]*(fc1_k[9][25]) +
		in[10]*(fc1_k[10][25]) +
		in[11]*(fc1_k[11][25]) +
		in[12]*(fc1_k[12][25]) +
		in[13]*(fc1_k[13][25]) +
		in[14]*(fc1_k[14][25]) +
		in[15]*(fc1_k[15][25]) +
		in[16]*(fc1_k[16][25]) +
		in[17]*(fc1_k[17][25]) +
		in[18]*(fc1_k[18][25]) +
		in[19]*(fc1_k[19][25]) +
		in[20]*(fc1_k[20][25]) +
		in[21]*(fc1_k[21][25]) +
		in[22]*(fc1_k[22][25]) +
		in[23]*(fc1_k[23][25]) +
		in[24]*(fc1_k[24][25]) +
		in[25]*(fc1_k[25][25]) +
		in[26]*(fc1_k[26][25]) +
		(fc1_b[25]);
	out[26] =
		in[0]*(fc1_k[0][26]) +
		in[1]*(fc1_k[1][26]) +
		in[2]*(fc1_k[2][26]) +
		in[3]*(fc1_k[3][26]) +
		in[4]*(fc1_k[4][26]) +
		in[5]*(fc1_k[5][26]) +
		in[6]*(fc1_k[6][26]) +
		in[7]*(fc1_k[7][26]) +
		in[8]*(fc1_k[8][26]) +
		in[9]*(fc1_k[9][26]) +
		in[10]*(fc1_k[10][26]) +
		in[11]*(fc1_k[11][26]) +
		in[12]*(fc1_k[12][26]) +
		in[13]*(fc1_k[13][26]) +
		in[14]*(fc1_k[14][26]) +
		in[15]*(fc1_k[15][26]) +
		in[16]*(fc1_k[16][26]) +
		in[17]*(fc1_k[17][26]) +
		in[18]*(fc1_k[18][26]) +
		in[19]*(fc1_k[19][26]) +
		in[20]*(fc1_k[20][26]) +
		in[21]*(fc1_k[21][26]) +
		in[22]*(fc1_k[22][26]) +
		in[23]*(fc1_k[23][26]) +
		in[24]*(fc1_k[24][26]) +
		in[25]*(fc1_k[25][26]) +
		in[26]*(fc1_k[26][26]) +
		(fc1_b[26]);
	out[27] =
		in[0]*(fc1_k[0][27]) +
		in[1]*(fc1_k[1][27]) +
		in[2]*(fc1_k[2][27]) +
		in[3]*(fc1_k[3][27]) +
		in[4]*(fc1_k[4][27]) +
		in[5]*(fc1_k[5][27]) +
		in[6]*(fc1_k[6][27]) +
		in[7]*(fc1_k[7][27]) +
		in[8]*(fc1_k[8][27]) +
		in[9]*(fc1_k[9][27]) +
		in[10]*(fc1_k[10][27]) +
		in[11]*(fc1_k[11][27]) +
		in[12]*(fc1_k[12][27]) +
		in[13]*(fc1_k[13][27]) +
		in[14]*(fc1_k[14][27]) +
		in[15]*(fc1_k[15][27]) +
		in[16]*(fc1_k[16][27]) +
		in[17]*(fc1_k[17][27]) +
		in[18]*(fc1_k[18][27]) +
		in[19]*(fc1_k[19][27]) +
		in[20]*(fc1_k[20][27]) +
		in[21]*(fc1_k[21][27]) +
		in[22]*(fc1_k[22][27]) +
		in[23]*(fc1_k[23][27]) +
		in[24]*(fc1_k[24][27]) +
		in[25]*(fc1_k[25][27]) +
		in[26]*(fc1_k[26][27]) +
		(fc1_b[27]);
	out[28] =
		in[0]*(fc1_k[0][28]) +
		in[1]*(fc1_k[1][28]) +
		in[2]*(fc1_k[2][28]) +
		in[3]*(fc1_k[3][28]) +
		in[4]*(fc1_k[4][28]) +
		in[5]*(fc1_k[5][28]) +
		in[6]*(fc1_k[6][28]) +
		in[7]*(fc1_k[7][28]) +
		in[8]*(fc1_k[8][28]) +
		in[9]*(fc1_k[9][28]) +
		in[10]*(fc1_k[10][28]) +
		in[11]*(fc1_k[11][28]) +
		in[12]*(fc1_k[12][28]) +
		in[13]*(fc1_k[13][28]) +
		in[14]*(fc1_k[14][28]) +
		in[15]*(fc1_k[15][28]) +
		in[16]*(fc1_k[16][28]) +
		in[17]*(fc1_k[17][28]) +
		in[18]*(fc1_k[18][28]) +
		in[19]*(fc1_k[19][28]) +
		in[20]*(fc1_k[20][28]) +
		in[21]*(fc1_k[21][28]) +
		in[22]*(fc1_k[22][28]) +
		in[23]*(fc1_k[23][28]) +
		in[24]*(fc1_k[24][28]) +
		in[25]*(fc1_k[25][28]) +
		in[26]*(fc1_k[26][28]) +
		(fc1_b[28]);
	out[29] =
		in[0]*(fc1_k[0][29]) +
		in[1]*(fc1_k[1][29]) +
		in[2]*(fc1_k[2][29]) +
		in[3]*(fc1_k[3][29]) +
		in[4]*(fc1_k[4][29]) +
		in[5]*(fc1_k[5][29]) +
		in[6]*(fc1_k[6][29]) +
		in[7]*(fc1_k[7][29]) +
		in[8]*(fc1_k[8][29]) +
		in[9]*(fc1_k[9][29]) +
		in[10]*(fc1_k[10][29]) +
		in[11]*(fc1_k[11][29]) +
		in[12]*(fc1_k[12][29]) +
		in[13]*(fc1_k[13][29]) +
		in[14]*(fc1_k[14][29]) +
		in[15]*(fc1_k[15][29]) +
		in[16]*(fc1_k[16][29]) +
		in[17]*(fc1_k[17][29]) +
		in[18]*(fc1_k[18][29]) +
		in[19]*(fc1_k[19][29]) +
		in[20]*(fc1_k[20][29]) +
		in[21]*(fc1_k[21][29]) +
		in[22]*(fc1_k[22][29]) +
		in[23]*(fc1_k[23][29]) +
		in[24]*(fc1_k[24][29]) +
		in[25]*(fc1_k[25][29]) +
		in[26]*(fc1_k[26][29]) +
		(fc1_b[29]);
	out[30] =
		in[0]*(fc1_k[0][30]) +
		in[1]*(fc1_k[1][30]) +
		in[2]*(fc1_k[2][30]) +
		in[3]*(fc1_k[3][30]) +
		in[4]*(fc1_k[4][30]) +
		in[5]*(fc1_k[5][30]) +
		in[6]*(fc1_k[6][30]) +
		in[7]*(fc1_k[7][30]) +
		in[8]*(fc1_k[8][30]) +
		in[9]*(fc1_k[9][30]) +
		in[10]*(fc1_k[10][30]) +
		in[11]*(fc1_k[11][30]) +
		in[12]*(fc1_k[12][30]) +
		in[13]*(fc1_k[13][30]) +
		in[14]*(fc1_k[14][30]) +
		in[15]*(fc1_k[15][30]) +
		in[16]*(fc1_k[16][30]) +
		in[17]*(fc1_k[17][30]) +
		in[18]*(fc1_k[18][30]) +
		in[19]*(fc1_k[19][30]) +
		in[20]*(fc1_k[20][30]) +
		in[21]*(fc1_k[21][30]) +
		in[22]*(fc1_k[22][30]) +
		in[23]*(fc1_k[23][30]) +
		in[24]*(fc1_k[24][30]) +
		in[25]*(fc1_k[25][30]) +
		in[26]*(fc1_k[26][30]) +
		(fc1_b[30]);
	out[31] =
		in[0]*(fc1_k[0][31]) +
		in[1]*(fc1_k[1][31]) +
		in[2]*(fc1_k[2][31]) +
		in[3]*(fc1_k[3][31]) +
		in[4]*(fc1_k[4][31]) +
		in[5]*(fc1_k[5][31]) +
		in[6]*(fc1_k[6][31]) +
		in[7]*(fc1_k[7][31]) +
		in[8]*(fc1_k[8][31]) +
		in[9]*(fc1_k[9][31]) +
		in[10]*(fc1_k[10][31]) +
		in[11]*(fc1_k[11][31]) +
		in[12]*(fc1_k[12][31]) +
		in[13]*(fc1_k[13][31]) +
		in[14]*(fc1_k[14][31]) +
		in[15]*(fc1_k[15][31]) +
		in[16]*(fc1_k[16][31]) +
		in[17]*(fc1_k[17][31]) +
		in[18]*(fc1_k[18][31]) +
		in[19]*(fc1_k[19][31]) +
		in[20]*(fc1_k[20][31]) +
		in[21]*(fc1_k[21][31]) +
		in[22]*(fc1_k[22][31]) +
		in[23]*(fc1_k[23][31]) +
		in[24]*(fc1_k[24][31]) +
		in[25]*(fc1_k[25][31]) +
		in[26]*(fc1_k[26][31]) +
		(fc1_b[31]);
	out[32] =
		in[0]*(fc1_k[0][32]) +
		in[1]*(fc1_k[1][32]) +
		in[2]*(fc1_k[2][32]) +
		in[3]*(fc1_k[3][32]) +
		in[4]*(fc1_k[4][32]) +
		in[5]*(fc1_k[5][32]) +
		in[6]*(fc1_k[6][32]) +
		in[7]*(fc1_k[7][32]) +
		in[8]*(fc1_k[8][32]) +
		in[9]*(fc1_k[9][32]) +
		in[10]*(fc1_k[10][32]) +
		in[11]*(fc1_k[11][32]) +
		in[12]*(fc1_k[12][32]) +
		in[13]*(fc1_k[13][32]) +
		in[14]*(fc1_k[14][32]) +
		in[15]*(fc1_k[15][32]) +
		in[16]*(fc1_k[16][32]) +
		in[17]*(fc1_k[17][32]) +
		in[18]*(fc1_k[18][32]) +
		in[19]*(fc1_k[19][32]) +
		in[20]*(fc1_k[20][32]) +
		in[21]*(fc1_k[21][32]) +
		in[22]*(fc1_k[22][32]) +
		in[23]*(fc1_k[23][32]) +
		in[24]*(fc1_k[24][32]) +
		in[25]*(fc1_k[25][32]) +
		in[26]*(fc1_k[26][32]) +
		(fc1_b[32]);
	out[33] =
		in[0]*(fc1_k[0][33]) +
		in[1]*(fc1_k[1][33]) +
		in[2]*(fc1_k[2][33]) +
		in[3]*(fc1_k[3][33]) +
		in[4]*(fc1_k[4][33]) +
		in[5]*(fc1_k[5][33]) +
		in[6]*(fc1_k[6][33]) +
		in[7]*(fc1_k[7][33]) +
		in[8]*(fc1_k[8][33]) +
		in[9]*(fc1_k[9][33]) +
		in[10]*(fc1_k[10][33]) +
		in[11]*(fc1_k[11][33]) +
		in[12]*(fc1_k[12][33]) +
		in[13]*(fc1_k[13][33]) +
		in[14]*(fc1_k[14][33]) +
		in[15]*(fc1_k[15][33]) +
		in[16]*(fc1_k[16][33]) +
		in[17]*(fc1_k[17][33]) +
		in[18]*(fc1_k[18][33]) +
		in[19]*(fc1_k[19][33]) +
		in[20]*(fc1_k[20][33]) +
		in[21]*(fc1_k[21][33]) +
		in[22]*(fc1_k[22][33]) +
		in[23]*(fc1_k[23][33]) +
		in[24]*(fc1_k[24][33]) +
		in[25]*(fc1_k[25][33]) +
		in[26]*(fc1_k[26][33]) +
		(fc1_b[33]);
	out[34] =
		in[0]*(fc1_k[0][34]) +
		in[1]*(fc1_k[1][34]) +
		in[2]*(fc1_k[2][34]) +
		in[3]*(fc1_k[3][34]) +
		in[4]*(fc1_k[4][34]) +
		in[5]*(fc1_k[5][34]) +
		in[6]*(fc1_k[6][34]) +
		in[7]*(fc1_k[7][34]) +
		in[8]*(fc1_k[8][34]) +
		in[9]*(fc1_k[9][34]) +
		in[10]*(fc1_k[10][34]) +
		in[11]*(fc1_k[11][34]) +
		in[12]*(fc1_k[12][34]) +
		in[13]*(fc1_k[13][34]) +
		in[14]*(fc1_k[14][34]) +
		in[15]*(fc1_k[15][34]) +
		in[16]*(fc1_k[16][34]) +
		in[17]*(fc1_k[17][34]) +
		in[18]*(fc1_k[18][34]) +
		in[19]*(fc1_k[19][34]) +
		in[20]*(fc1_k[20][34]) +
		in[21]*(fc1_k[21][34]) +
		in[22]*(fc1_k[22][34]) +
		in[23]*(fc1_k[23][34]) +
		in[24]*(fc1_k[24][34]) +
		in[25]*(fc1_k[25][34]) +
		in[26]*(fc1_k[26][34]) +
		(fc1_b[34]);
	out[35] =
		in[0]*(fc1_k[0][35]) +
		in[1]*(fc1_k[1][35]) +
		in[2]*(fc1_k[2][35]) +
		in[3]*(fc1_k[3][35]) +
		in[4]*(fc1_k[4][35]) +
		in[5]*(fc1_k[5][35]) +
		in[6]*(fc1_k[6][35]) +
		in[7]*(fc1_k[7][35]) +
		in[8]*(fc1_k[8][35]) +
		in[9]*(fc1_k[9][35]) +
		in[10]*(fc1_k[10][35]) +
		in[11]*(fc1_k[11][35]) +
		in[12]*(fc1_k[12][35]) +
		in[13]*(fc1_k[13][35]) +
		in[14]*(fc1_k[14][35]) +
		in[15]*(fc1_k[15][35]) +
		in[16]*(fc1_k[16][35]) +
		in[17]*(fc1_k[17][35]) +
		in[18]*(fc1_k[18][35]) +
		in[19]*(fc1_k[19][35]) +
		in[20]*(fc1_k[20][35]) +
		in[21]*(fc1_k[21][35]) +
		in[22]*(fc1_k[22][35]) +
		in[23]*(fc1_k[23][35]) +
		in[24]*(fc1_k[24][35]) +
		in[25]*(fc1_k[25][35]) +
		in[26]*(fc1_k[26][35]) +
		(fc1_b[35]);
	out[36] =
		in[0]*(fc1_k[0][36]) +
		in[1]*(fc1_k[1][36]) +
		in[2]*(fc1_k[2][36]) +
		in[3]*(fc1_k[3][36]) +
		in[4]*(fc1_k[4][36]) +
		in[5]*(fc1_k[5][36]) +
		in[6]*(fc1_k[6][36]) +
		in[7]*(fc1_k[7][36]) +
		in[8]*(fc1_k[8][36]) +
		in[9]*(fc1_k[9][36]) +
		in[10]*(fc1_k[10][36]) +
		in[11]*(fc1_k[11][36]) +
		in[12]*(fc1_k[12][36]) +
		in[13]*(fc1_k[13][36]) +
		in[14]*(fc1_k[14][36]) +
		in[15]*(fc1_k[15][36]) +
		in[16]*(fc1_k[16][36]) +
		in[17]*(fc1_k[17][36]) +
		in[18]*(fc1_k[18][36]) +
		in[19]*(fc1_k[19][36]) +
		in[20]*(fc1_k[20][36]) +
		in[21]*(fc1_k[21][36]) +
		in[22]*(fc1_k[22][36]) +
		in[23]*(fc1_k[23][36]) +
		in[24]*(fc1_k[24][36]) +
		in[25]*(fc1_k[25][36]) +
		in[26]*(fc1_k[26][36]) +
		(fc1_b[36]);
	out[37] =
		in[0]*(fc1_k[0][37]) +
		in[1]*(fc1_k[1][37]) +
		in[2]*(fc1_k[2][37]) +
		in[3]*(fc1_k[3][37]) +
		in[4]*(fc1_k[4][37]) +
		in[5]*(fc1_k[5][37]) +
		in[6]*(fc1_k[6][37]) +
		in[7]*(fc1_k[7][37]) +
		in[8]*(fc1_k[8][37]) +
		in[9]*(fc1_k[9][37]) +
		in[10]*(fc1_k[10][37]) +
		in[11]*(fc1_k[11][37]) +
		in[12]*(fc1_k[12][37]) +
		in[13]*(fc1_k[13][37]) +
		in[14]*(fc1_k[14][37]) +
		in[15]*(fc1_k[15][37]) +
		in[16]*(fc1_k[16][37]) +
		in[17]*(fc1_k[17][37]) +
		in[18]*(fc1_k[18][37]) +
		in[19]*(fc1_k[19][37]) +
		in[20]*(fc1_k[20][37]) +
		in[21]*(fc1_k[21][37]) +
		in[22]*(fc1_k[22][37]) +
		in[23]*(fc1_k[23][37]) +
		in[24]*(fc1_k[24][37]) +
		in[25]*(fc1_k[25][37]) +
		in[26]*(fc1_k[26][37]) +
		(fc1_b[37]);
	out[38] =
		in[0]*(fc1_k[0][38]) +
		in[1]*(fc1_k[1][38]) +
		in[2]*(fc1_k[2][38]) +
		in[3]*(fc1_k[3][38]) +
		in[4]*(fc1_k[4][38]) +
		in[5]*(fc1_k[5][38]) +
		in[6]*(fc1_k[6][38]) +
		in[7]*(fc1_k[7][38]) +
		in[8]*(fc1_k[8][38]) +
		in[9]*(fc1_k[9][38]) +
		in[10]*(fc1_k[10][38]) +
		in[11]*(fc1_k[11][38]) +
		in[12]*(fc1_k[12][38]) +
		in[13]*(fc1_k[13][38]) +
		in[14]*(fc1_k[14][38]) +
		in[15]*(fc1_k[15][38]) +
		in[16]*(fc1_k[16][38]) +
		in[17]*(fc1_k[17][38]) +
		in[18]*(fc1_k[18][38]) +
		in[19]*(fc1_k[19][38]) +
		in[20]*(fc1_k[20][38]) +
		in[21]*(fc1_k[21][38]) +
		in[22]*(fc1_k[22][38]) +
		in[23]*(fc1_k[23][38]) +
		in[24]*(fc1_k[24][38]) +
		in[25]*(fc1_k[25][38]) +
		in[26]*(fc1_k[26][38]) +
		(fc1_b[38]);
	out[39] =
		in[0]*(fc1_k[0][39]) +
		in[1]*(fc1_k[1][39]) +
		in[2]*(fc1_k[2][39]) +
		in[3]*(fc1_k[3][39]) +
		in[4]*(fc1_k[4][39]) +
		in[5]*(fc1_k[5][39]) +
		in[6]*(fc1_k[6][39]) +
		in[7]*(fc1_k[7][39]) +
		in[8]*(fc1_k[8][39]) +
		in[9]*(fc1_k[9][39]) +
		in[10]*(fc1_k[10][39]) +
		in[11]*(fc1_k[11][39]) +
		in[12]*(fc1_k[12][39]) +
		in[13]*(fc1_k[13][39]) +
		in[14]*(fc1_k[14][39]) +
		in[15]*(fc1_k[15][39]) +
		in[16]*(fc1_k[16][39]) +
		in[17]*(fc1_k[17][39]) +
		in[18]*(fc1_k[18][39]) +
		in[19]*(fc1_k[19][39]) +
		in[20]*(fc1_k[20][39]) +
		in[21]*(fc1_k[21][39]) +
		in[22]*(fc1_k[22][39]) +
		in[23]*(fc1_k[23][39]) +
		in[24]*(fc1_k[24][39]) +
		in[25]*(fc1_k[25][39]) +
		in[26]*(fc1_k[26][39]) +
		(fc1_b[39]);
	out[40] =
		in[0]*(fc1_k[0][40]) +
		in[1]*(fc1_k[1][40]) +
		in[2]*(fc1_k[2][40]) +
		in[3]*(fc1_k[3][40]) +
		in[4]*(fc1_k[4][40]) +
		in[5]*(fc1_k[5][40]) +
		in[6]*(fc1_k[6][40]) +
		in[7]*(fc1_k[7][40]) +
		in[8]*(fc1_k[8][40]) +
		in[9]*(fc1_k[9][40]) +
		in[10]*(fc1_k[10][40]) +
		in[11]*(fc1_k[11][40]) +
		in[12]*(fc1_k[12][40]) +
		in[13]*(fc1_k[13][40]) +
		in[14]*(fc1_k[14][40]) +
		in[15]*(fc1_k[15][40]) +
		in[16]*(fc1_k[16][40]) +
		in[17]*(fc1_k[17][40]) +
		in[18]*(fc1_k[18][40]) +
		in[19]*(fc1_k[19][40]) +
		in[20]*(fc1_k[20][40]) +
		in[21]*(fc1_k[21][40]) +
		in[22]*(fc1_k[22][40]) +
		in[23]*(fc1_k[23][40]) +
		in[24]*(fc1_k[24][40]) +
		in[25]*(fc1_k[25][40]) +
		in[26]*(fc1_k[26][40]) +
		(fc1_b[40]);
	out[41] =
		in[0]*(fc1_k[0][41]) +
		in[1]*(fc1_k[1][41]) +
		in[2]*(fc1_k[2][41]) +
		in[3]*(fc1_k[3][41]) +
		in[4]*(fc1_k[4][41]) +
		in[5]*(fc1_k[5][41]) +
		in[6]*(fc1_k[6][41]) +
		in[7]*(fc1_k[7][41]) +
		in[8]*(fc1_k[8][41]) +
		in[9]*(fc1_k[9][41]) +
		in[10]*(fc1_k[10][41]) +
		in[11]*(fc1_k[11][41]) +
		in[12]*(fc1_k[12][41]) +
		in[13]*(fc1_k[13][41]) +
		in[14]*(fc1_k[14][41]) +
		in[15]*(fc1_k[15][41]) +
		in[16]*(fc1_k[16][41]) +
		in[17]*(fc1_k[17][41]) +
		in[18]*(fc1_k[18][41]) +
		in[19]*(fc1_k[19][41]) +
		in[20]*(fc1_k[20][41]) +
		in[21]*(fc1_k[21][41]) +
		in[22]*(fc1_k[22][41]) +
		in[23]*(fc1_k[23][41]) +
		in[24]*(fc1_k[24][41]) +
		in[25]*(fc1_k[25][41]) +
		in[26]*(fc1_k[26][41]) +
		(fc1_b[41]);
	out[42] =
		in[0]*(fc1_k[0][42]) +
		in[1]*(fc1_k[1][42]) +
		in[2]*(fc1_k[2][42]) +
		in[3]*(fc1_k[3][42]) +
		in[4]*(fc1_k[4][42]) +
		in[5]*(fc1_k[5][42]) +
		in[6]*(fc1_k[6][42]) +
		in[7]*(fc1_k[7][42]) +
		in[8]*(fc1_k[8][42]) +
		in[9]*(fc1_k[9][42]) +
		in[10]*(fc1_k[10][42]) +
		in[11]*(fc1_k[11][42]) +
		in[12]*(fc1_k[12][42]) +
		in[13]*(fc1_k[13][42]) +
		in[14]*(fc1_k[14][42]) +
		in[15]*(fc1_k[15][42]) +
		in[16]*(fc1_k[16][42]) +
		in[17]*(fc1_k[17][42]) +
		in[18]*(fc1_k[18][42]) +
		in[19]*(fc1_k[19][42]) +
		in[20]*(fc1_k[20][42]) +
		in[21]*(fc1_k[21][42]) +
		in[22]*(fc1_k[22][42]) +
		in[23]*(fc1_k[23][42]) +
		in[24]*(fc1_k[24][42]) +
		in[25]*(fc1_k[25][42]) +
		in[26]*(fc1_k[26][42]) +
		(fc1_b[42]);
	out[43] =
		in[0]*(fc1_k[0][43]) +
		in[1]*(fc1_k[1][43]) +
		in[2]*(fc1_k[2][43]) +
		in[3]*(fc1_k[3][43]) +
		in[4]*(fc1_k[4][43]) +
		in[5]*(fc1_k[5][43]) +
		in[6]*(fc1_k[6][43]) +
		in[7]*(fc1_k[7][43]) +
		in[8]*(fc1_k[8][43]) +
		in[9]*(fc1_k[9][43]) +
		in[10]*(fc1_k[10][43]) +
		in[11]*(fc1_k[11][43]) +
		in[12]*(fc1_k[12][43]) +
		in[13]*(fc1_k[13][43]) +
		in[14]*(fc1_k[14][43]) +
		in[15]*(fc1_k[15][43]) +
		in[16]*(fc1_k[16][43]) +
		in[17]*(fc1_k[17][43]) +
		in[18]*(fc1_k[18][43]) +
		in[19]*(fc1_k[19][43]) +
		in[20]*(fc1_k[20][43]) +
		in[21]*(fc1_k[21][43]) +
		in[22]*(fc1_k[22][43]) +
		in[23]*(fc1_k[23][43]) +
		in[24]*(fc1_k[24][43]) +
		in[25]*(fc1_k[25][43]) +
		in[26]*(fc1_k[26][43]) +
		(fc1_b[43]);
	out[44] =
		in[0]*(fc1_k[0][44]) +
		in[1]*(fc1_k[1][44]) +
		in[2]*(fc1_k[2][44]) +
		in[3]*(fc1_k[3][44]) +
		in[4]*(fc1_k[4][44]) +
		in[5]*(fc1_k[5][44]) +
		in[6]*(fc1_k[6][44]) +
		in[7]*(fc1_k[7][44]) +
		in[8]*(fc1_k[8][44]) +
		in[9]*(fc1_k[9][44]) +
		in[10]*(fc1_k[10][44]) +
		in[11]*(fc1_k[11][44]) +
		in[12]*(fc1_k[12][44]) +
		in[13]*(fc1_k[13][44]) +
		in[14]*(fc1_k[14][44]) +
		in[15]*(fc1_k[15][44]) +
		in[16]*(fc1_k[16][44]) +
		in[17]*(fc1_k[17][44]) +
		in[18]*(fc1_k[18][44]) +
		in[19]*(fc1_k[19][44]) +
		in[20]*(fc1_k[20][44]) +
		in[21]*(fc1_k[21][44]) +
		in[22]*(fc1_k[22][44]) +
		in[23]*(fc1_k[23][44]) +
		in[24]*(fc1_k[24][44]) +
		in[25]*(fc1_k[25][44]) +
		in[26]*(fc1_k[26][44]) +
		(fc1_b[44]);
	out[45] =
		in[0]*(fc1_k[0][45]) +
		in[1]*(fc1_k[1][45]) +
		in[2]*(fc1_k[2][45]) +
		in[3]*(fc1_k[3][45]) +
		in[4]*(fc1_k[4][45]) +
		in[5]*(fc1_k[5][45]) +
		in[6]*(fc1_k[6][45]) +
		in[7]*(fc1_k[7][45]) +
		in[8]*(fc1_k[8][45]) +
		in[9]*(fc1_k[9][45]) +
		in[10]*(fc1_k[10][45]) +
		in[11]*(fc1_k[11][45]) +
		in[12]*(fc1_k[12][45]) +
		in[13]*(fc1_k[13][45]) +
		in[14]*(fc1_k[14][45]) +
		in[15]*(fc1_k[15][45]) +
		in[16]*(fc1_k[16][45]) +
		in[17]*(fc1_k[17][45]) +
		in[18]*(fc1_k[18][45]) +
		in[19]*(fc1_k[19][45]) +
		in[20]*(fc1_k[20][45]) +
		in[21]*(fc1_k[21][45]) +
		in[22]*(fc1_k[22][45]) +
		in[23]*(fc1_k[23][45]) +
		in[24]*(fc1_k[24][45]) +
		in[25]*(fc1_k[25][45]) +
		in[26]*(fc1_k[26][45]) +
		(fc1_b[45]);
	out[46] =
		in[0]*(fc1_k[0][46]) +
		in[1]*(fc1_k[1][46]) +
		in[2]*(fc1_k[2][46]) +
		in[3]*(fc1_k[3][46]) +
		in[4]*(fc1_k[4][46]) +
		in[5]*(fc1_k[5][46]) +
		in[6]*(fc1_k[6][46]) +
		in[7]*(fc1_k[7][46]) +
		in[8]*(fc1_k[8][46]) +
		in[9]*(fc1_k[9][46]) +
		in[10]*(fc1_k[10][46]) +
		in[11]*(fc1_k[11][46]) +
		in[12]*(fc1_k[12][46]) +
		in[13]*(fc1_k[13][46]) +
		in[14]*(fc1_k[14][46]) +
		in[15]*(fc1_k[15][46]) +
		in[16]*(fc1_k[16][46]) +
		in[17]*(fc1_k[17][46]) +
		in[18]*(fc1_k[18][46]) +
		in[19]*(fc1_k[19][46]) +
		in[20]*(fc1_k[20][46]) +
		in[21]*(fc1_k[21][46]) +
		in[22]*(fc1_k[22][46]) +
		in[23]*(fc1_k[23][46]) +
		in[24]*(fc1_k[24][46]) +
		in[25]*(fc1_k[25][46]) +
		in[26]*(fc1_k[26][46]) +
		(fc1_b[46]);
	out[47] =
		in[0]*(fc1_k[0][47]) +
		in[1]*(fc1_k[1][47]) +
		in[2]*(fc1_k[2][47]) +
		in[3]*(fc1_k[3][47]) +
		in[4]*(fc1_k[4][47]) +
		in[5]*(fc1_k[5][47]) +
		in[6]*(fc1_k[6][47]) +
		in[7]*(fc1_k[7][47]) +
		in[8]*(fc1_k[8][47]) +
		in[9]*(fc1_k[9][47]) +
		in[10]*(fc1_k[10][47]) +
		in[11]*(fc1_k[11][47]) +
		in[12]*(fc1_k[12][47]) +
		in[13]*(fc1_k[13][47]) +
		in[14]*(fc1_k[14][47]) +
		in[15]*(fc1_k[15][47]) +
		in[16]*(fc1_k[16][47]) +
		in[17]*(fc1_k[17][47]) +
		in[18]*(fc1_k[18][47]) +
		in[19]*(fc1_k[19][47]) +
		in[20]*(fc1_k[20][47]) +
		in[21]*(fc1_k[21][47]) +
		in[22]*(fc1_k[22][47]) +
		in[23]*(fc1_k[23][47]) +
		in[24]*(fc1_k[24][47]) +
		in[25]*(fc1_k[25][47]) +
		in[26]*(fc1_k[26][47]) +
		(fc1_b[47]);
	out[48] =
		in[0]*(fc1_k[0][48]) +
		in[1]*(fc1_k[1][48]) +
		in[2]*(fc1_k[2][48]) +
		in[3]*(fc1_k[3][48]) +
		in[4]*(fc1_k[4][48]) +
		in[5]*(fc1_k[5][48]) +
		in[6]*(fc1_k[6][48]) +
		in[7]*(fc1_k[7][48]) +
		in[8]*(fc1_k[8][48]) +
		in[9]*(fc1_k[9][48]) +
		in[10]*(fc1_k[10][48]) +
		in[11]*(fc1_k[11][48]) +
		in[12]*(fc1_k[12][48]) +
		in[13]*(fc1_k[13][48]) +
		in[14]*(fc1_k[14][48]) +
		in[15]*(fc1_k[15][48]) +
		in[16]*(fc1_k[16][48]) +
		in[17]*(fc1_k[17][48]) +
		in[18]*(fc1_k[18][48]) +
		in[19]*(fc1_k[19][48]) +
		in[20]*(fc1_k[20][48]) +
		in[21]*(fc1_k[21][48]) +
		in[22]*(fc1_k[22][48]) +
		in[23]*(fc1_k[23][48]) +
		in[24]*(fc1_k[24][48]) +
		in[25]*(fc1_k[25][48]) +
		in[26]*(fc1_k[26][48]) +
		(fc1_b[48]);
	out[49] =
		in[0]*(fc1_k[0][49]) +
		in[1]*(fc1_k[1][49]) +
		in[2]*(fc1_k[2][49]) +
		in[3]*(fc1_k[3][49]) +
		in[4]*(fc1_k[4][49]) +
		in[5]*(fc1_k[5][49]) +
		in[6]*(fc1_k[6][49]) +
		in[7]*(fc1_k[7][49]) +
		in[8]*(fc1_k[8][49]) +
		in[9]*(fc1_k[9][49]) +
		in[10]*(fc1_k[10][49]) +
		in[11]*(fc1_k[11][49]) +
		in[12]*(fc1_k[12][49]) +
		in[13]*(fc1_k[13][49]) +
		in[14]*(fc1_k[14][49]) +
		in[15]*(fc1_k[15][49]) +
		in[16]*(fc1_k[16][49]) +
		in[17]*(fc1_k[17][49]) +
		in[18]*(fc1_k[18][49]) +
		in[19]*(fc1_k[19][49]) +
		in[20]*(fc1_k[20][49]) +
		in[21]*(fc1_k[21][49]) +
		in[22]*(fc1_k[22][49]) +
		in[23]*(fc1_k[23][49]) +
		in[24]*(fc1_k[24][49]) +
		in[25]*(fc1_k[25][49]) +
		in[26]*(fc1_k[26][49]) +
		(fc1_b[49]);
}

inline void fc_2(int in[50], int out[10]){
	out[0] =
		in[0]*(fc2_k[0][0]) +
		in[1]*(fc2_k[1][0]) +
		in[2]*(fc2_k[2][0]) +
		in[3]*(fc2_k[3][0]) +
		in[4]*(fc2_k[4][0]) +
		in[5]*(fc2_k[5][0]) +
		in[6]*(fc2_k[6][0]) +
		in[7]*(fc2_k[7][0]) +
		in[8]*(fc2_k[8][0]) +
		in[9]*(fc2_k[9][0]) +
		in[10]*(fc2_k[10][0]) +
		in[11]*(fc2_k[11][0]) +
		in[12]*(fc2_k[12][0]) +
		in[13]*(fc2_k[13][0]) +
		in[14]*(fc2_k[14][0]) +
		in[15]*(fc2_k[15][0]) +
		in[16]*(fc2_k[16][0]) +
		in[17]*(fc2_k[17][0]) +
		in[18]*(fc2_k[18][0]) +
		in[19]*(fc2_k[19][0]) +
		in[20]*(fc2_k[20][0]) +
		in[21]*(fc2_k[21][0]) +
		in[22]*(fc2_k[22][0]) +
		in[23]*(fc2_k[23][0]) +
		in[24]*(fc2_k[24][0]) +
		in[25]*(fc2_k[25][0]) +
		in[26]*(fc2_k[26][0]) +
		in[27]*(fc2_k[27][0]) +
		in[28]*(fc2_k[28][0]) +
		in[29]*(fc2_k[29][0]) +
		in[30]*(fc2_k[30][0]) +
		in[31]*(fc2_k[31][0]) +
		in[32]*(fc2_k[32][0]) +
		in[33]*(fc2_k[33][0]) +
		in[34]*(fc2_k[34][0]) +
		in[35]*(fc2_k[35][0]) +
		in[36]*(fc2_k[36][0]) +
		in[37]*(fc2_k[37][0]) +
		in[38]*(fc2_k[38][0]) +
		in[39]*(fc2_k[39][0]) +
		in[40]*(fc2_k[40][0]) +
		in[41]*(fc2_k[41][0]) +
		in[42]*(fc2_k[42][0]) +
		in[43]*(fc2_k[43][0]) +
		in[44]*(fc2_k[44][0]) +
		in[45]*(fc2_k[45][0]) +
		in[46]*(fc2_k[46][0]) +
		in[47]*(fc2_k[47][0]) +
		in[48]*(fc2_k[48][0]) +
		in[49]*(fc2_k[49][0]) +
		(fc2_b[0]);
	out[1] =
		in[0]*(fc2_k[0][1]) +
		in[1]*(fc2_k[1][1]) +
		in[2]*(fc2_k[2][1]) +
		in[3]*(fc2_k[3][1]) +
		in[4]*(fc2_k[4][1]) +
		in[5]*(fc2_k[5][1]) +
		in[6]*(fc2_k[6][1]) +
		in[7]*(fc2_k[7][1]) +
		in[8]*(fc2_k[8][1]) +
		in[9]*(fc2_k[9][1]) +
		in[10]*(fc2_k[10][1]) +
		in[11]*(fc2_k[11][1]) +
		in[12]*(fc2_k[12][1]) +
		in[13]*(fc2_k[13][1]) +
		in[14]*(fc2_k[14][1]) +
		in[15]*(fc2_k[15][1]) +
		in[16]*(fc2_k[16][1]) +
		in[17]*(fc2_k[17][1]) +
		in[18]*(fc2_k[18][1]) +
		in[19]*(fc2_k[19][1]) +
		in[20]*(fc2_k[20][1]) +
		in[21]*(fc2_k[21][1]) +
		in[22]*(fc2_k[22][1]) +
		in[23]*(fc2_k[23][1]) +
		in[24]*(fc2_k[24][1]) +
		in[25]*(fc2_k[25][1]) +
		in[26]*(fc2_k[26][1]) +
		in[27]*(fc2_k[27][1]) +
		in[28]*(fc2_k[28][1]) +
		in[29]*(fc2_k[29][1]) +
		in[30]*(fc2_k[30][1]) +
		in[31]*(fc2_k[31][1]) +
		in[32]*(fc2_k[32][1]) +
		in[33]*(fc2_k[33][1]) +
		in[34]*(fc2_k[34][1]) +
		in[35]*(fc2_k[35][1]) +
		in[36]*(fc2_k[36][1]) +
		in[37]*(fc2_k[37][1]) +
		in[38]*(fc2_k[38][1]) +
		in[39]*(fc2_k[39][1]) +
		in[40]*(fc2_k[40][1]) +
		in[41]*(fc2_k[41][1]) +
		in[42]*(fc2_k[42][1]) +
		in[43]*(fc2_k[43][1]) +
		in[44]*(fc2_k[44][1]) +
		in[45]*(fc2_k[45][1]) +
		in[46]*(fc2_k[46][1]) +
		in[47]*(fc2_k[47][1]) +
		in[48]*(fc2_k[48][1]) +
		in[49]*(fc2_k[49][1]) +
		(fc2_b[1]);
	out[2] =
		in[0]*(fc2_k[0][2]) +
		in[1]*(fc2_k[1][2]) +
		in[2]*(fc2_k[2][2]) +
		in[3]*(fc2_k[3][2]) +
		in[4]*(fc2_k[4][2]) +
		in[5]*(fc2_k[5][2]) +
		in[6]*(fc2_k[6][2]) +
		in[7]*(fc2_k[7][2]) +
		in[8]*(fc2_k[8][2]) +
		in[9]*(fc2_k[9][2]) +
		in[10]*(fc2_k[10][2]) +
		in[11]*(fc2_k[11][2]) +
		in[12]*(fc2_k[12][2]) +
		in[13]*(fc2_k[13][2]) +
		in[14]*(fc2_k[14][2]) +
		in[15]*(fc2_k[15][2]) +
		in[16]*(fc2_k[16][2]) +
		in[17]*(fc2_k[17][2]) +
		in[18]*(fc2_k[18][2]) +
		in[19]*(fc2_k[19][2]) +
		in[20]*(fc2_k[20][2]) +
		in[21]*(fc2_k[21][2]) +
		in[22]*(fc2_k[22][2]) +
		in[23]*(fc2_k[23][2]) +
		in[24]*(fc2_k[24][2]) +
		in[25]*(fc2_k[25][2]) +
		in[26]*(fc2_k[26][2]) +
		in[27]*(fc2_k[27][2]) +
		in[28]*(fc2_k[28][2]) +
		in[29]*(fc2_k[29][2]) +
		in[30]*(fc2_k[30][2]) +
		in[31]*(fc2_k[31][2]) +
		in[32]*(fc2_k[32][2]) +
		in[33]*(fc2_k[33][2]) +
		in[34]*(fc2_k[34][2]) +
		in[35]*(fc2_k[35][2]) +
		in[36]*(fc2_k[36][2]) +
		in[37]*(fc2_k[37][2]) +
		in[38]*(fc2_k[38][2]) +
		in[39]*(fc2_k[39][2]) +
		in[40]*(fc2_k[40][2]) +
		in[41]*(fc2_k[41][2]) +
		in[42]*(fc2_k[42][2]) +
		in[43]*(fc2_k[43][2]) +
		in[44]*(fc2_k[44][2]) +
		in[45]*(fc2_k[45][2]) +
		in[46]*(fc2_k[46][2]) +
		in[47]*(fc2_k[47][2]) +
		in[48]*(fc2_k[48][2]) +
		in[49]*(fc2_k[49][2]) +
		(fc2_b[2]);
	out[3] =
		in[0]*(fc2_k[0][3]) +
		in[1]*(fc2_k[1][3]) +
		in[2]*(fc2_k[2][3]) +
		in[3]*(fc2_k[3][3]) +
		in[4]*(fc2_k[4][3]) +
		in[5]*(fc2_k[5][3]) +
		in[6]*(fc2_k[6][3]) +
		in[7]*(fc2_k[7][3]) +
		in[8]*(fc2_k[8][3]) +
		in[9]*(fc2_k[9][3]) +
		in[10]*(fc2_k[10][3]) +
		in[11]*(fc2_k[11][3]) +
		in[12]*(fc2_k[12][3]) +
		in[13]*(fc2_k[13][3]) +
		in[14]*(fc2_k[14][3]) +
		in[15]*(fc2_k[15][3]) +
		in[16]*(fc2_k[16][3]) +
		in[17]*(fc2_k[17][3]) +
		in[18]*(fc2_k[18][3]) +
		in[19]*(fc2_k[19][3]) +
		in[20]*(fc2_k[20][3]) +
		in[21]*(fc2_k[21][3]) +
		in[22]*(fc2_k[22][3]) +
		in[23]*(fc2_k[23][3]) +
		in[24]*(fc2_k[24][3]) +
		in[25]*(fc2_k[25][3]) +
		in[26]*(fc2_k[26][3]) +
		in[27]*(fc2_k[27][3]) +
		in[28]*(fc2_k[28][3]) +
		in[29]*(fc2_k[29][3]) +
		in[30]*(fc2_k[30][3]) +
		in[31]*(fc2_k[31][3]) +
		in[32]*(fc2_k[32][3]) +
		in[33]*(fc2_k[33][3]) +
		in[34]*(fc2_k[34][3]) +
		in[35]*(fc2_k[35][3]) +
		in[36]*(fc2_k[36][3]) +
		in[37]*(fc2_k[37][3]) +
		in[38]*(fc2_k[38][3]) +
		in[39]*(fc2_k[39][3]) +
		in[40]*(fc2_k[40][3]) +
		in[41]*(fc2_k[41][3]) +
		in[42]*(fc2_k[42][3]) +
		in[43]*(fc2_k[43][3]) +
		in[44]*(fc2_k[44][3]) +
		in[45]*(fc2_k[45][3]) +
		in[46]*(fc2_k[46][3]) +
		in[47]*(fc2_k[47][3]) +
		in[48]*(fc2_k[48][3]) +
		in[49]*(fc2_k[49][3]) +
		(fc2_b[3]);
	out[4] =
		in[0]*(fc2_k[0][4]) +
		in[1]*(fc2_k[1][4]) +
		in[2]*(fc2_k[2][4]) +
		in[3]*(fc2_k[3][4]) +
		in[4]*(fc2_k[4][4]) +
		in[5]*(fc2_k[5][4]) +
		in[6]*(fc2_k[6][4]) +
		in[7]*(fc2_k[7][4]) +
		in[8]*(fc2_k[8][4]) +
		in[9]*(fc2_k[9][4]) +
		in[10]*(fc2_k[10][4]) +
		in[11]*(fc2_k[11][4]) +
		in[12]*(fc2_k[12][4]) +
		in[13]*(fc2_k[13][4]) +
		in[14]*(fc2_k[14][4]) +
		in[15]*(fc2_k[15][4]) +
		in[16]*(fc2_k[16][4]) +
		in[17]*(fc2_k[17][4]) +
		in[18]*(fc2_k[18][4]) +
		in[19]*(fc2_k[19][4]) +
		in[20]*(fc2_k[20][4]) +
		in[21]*(fc2_k[21][4]) +
		in[22]*(fc2_k[22][4]) +
		in[23]*(fc2_k[23][4]) +
		in[24]*(fc2_k[24][4]) +
		in[25]*(fc2_k[25][4]) +
		in[26]*(fc2_k[26][4]) +
		in[27]*(fc2_k[27][4]) +
		in[28]*(fc2_k[28][4]) +
		in[29]*(fc2_k[29][4]) +
		in[30]*(fc2_k[30][4]) +
		in[31]*(fc2_k[31][4]) +
		in[32]*(fc2_k[32][4]) +
		in[33]*(fc2_k[33][4]) +
		in[34]*(fc2_k[34][4]) +
		in[35]*(fc2_k[35][4]) +
		in[36]*(fc2_k[36][4]) +
		in[37]*(fc2_k[37][4]) +
		in[38]*(fc2_k[38][4]) +
		in[39]*(fc2_k[39][4]) +
		in[40]*(fc2_k[40][4]) +
		in[41]*(fc2_k[41][4]) +
		in[42]*(fc2_k[42][4]) +
		in[43]*(fc2_k[43][4]) +
		in[44]*(fc2_k[44][4]) +
		in[45]*(fc2_k[45][4]) +
		in[46]*(fc2_k[46][4]) +
		in[47]*(fc2_k[47][4]) +
		in[48]*(fc2_k[48][4]) +
		in[49]*(fc2_k[49][4]) +
		(fc2_b[4]);
	out[5] =
		in[0]*(fc2_k[0][5]) +
		in[1]*(fc2_k[1][5]) +
		in[2]*(fc2_k[2][5]) +
		in[3]*(fc2_k[3][5]) +
		in[4]*(fc2_k[4][5]) +
		in[5]*(fc2_k[5][5]) +
		in[6]*(fc2_k[6][5]) +
		in[7]*(fc2_k[7][5]) +
		in[8]*(fc2_k[8][5]) +
		in[9]*(fc2_k[9][5]) +
		in[10]*(fc2_k[10][5]) +
		in[11]*(fc2_k[11][5]) +
		in[12]*(fc2_k[12][5]) +
		in[13]*(fc2_k[13][5]) +
		in[14]*(fc2_k[14][5]) +
		in[15]*(fc2_k[15][5]) +
		in[16]*(fc2_k[16][5]) +
		in[17]*(fc2_k[17][5]) +
		in[18]*(fc2_k[18][5]) +
		in[19]*(fc2_k[19][5]) +
		in[20]*(fc2_k[20][5]) +
		in[21]*(fc2_k[21][5]) +
		in[22]*(fc2_k[22][5]) +
		in[23]*(fc2_k[23][5]) +
		in[24]*(fc2_k[24][5]) +
		in[25]*(fc2_k[25][5]) +
		in[26]*(fc2_k[26][5]) +
		in[27]*(fc2_k[27][5]) +
		in[28]*(fc2_k[28][5]) +
		in[29]*(fc2_k[29][5]) +
		in[30]*(fc2_k[30][5]) +
		in[31]*(fc2_k[31][5]) +
		in[32]*(fc2_k[32][5]) +
		in[33]*(fc2_k[33][5]) +
		in[34]*(fc2_k[34][5]) +
		in[35]*(fc2_k[35][5]) +
		in[36]*(fc2_k[36][5]) +
		in[37]*(fc2_k[37][5]) +
		in[38]*(fc2_k[38][5]) +
		in[39]*(fc2_k[39][5]) +
		in[40]*(fc2_k[40][5]) +
		in[41]*(fc2_k[41][5]) +
		in[42]*(fc2_k[42][5]) +
		in[43]*(fc2_k[43][5]) +
		in[44]*(fc2_k[44][5]) +
		in[45]*(fc2_k[45][5]) +
		in[46]*(fc2_k[46][5]) +
		in[47]*(fc2_k[47][5]) +
		in[48]*(fc2_k[48][5]) +
		in[49]*(fc2_k[49][5]) +
		(fc2_b[5]);
	out[6] =
		in[0]*(fc2_k[0][6]) +
		in[1]*(fc2_k[1][6]) +
		in[2]*(fc2_k[2][6]) +
		in[3]*(fc2_k[3][6]) +
		in[4]*(fc2_k[4][6]) +
		in[5]*(fc2_k[5][6]) +
		in[6]*(fc2_k[6][6]) +
		in[7]*(fc2_k[7][6]) +
		in[8]*(fc2_k[8][6]) +
		in[9]*(fc2_k[9][6]) +
		in[10]*(fc2_k[10][6]) +
		in[11]*(fc2_k[11][6]) +
		in[12]*(fc2_k[12][6]) +
		in[13]*(fc2_k[13][6]) +
		in[14]*(fc2_k[14][6]) +
		in[15]*(fc2_k[15][6]) +
		in[16]*(fc2_k[16][6]) +
		in[17]*(fc2_k[17][6]) +
		in[18]*(fc2_k[18][6]) +
		in[19]*(fc2_k[19][6]) +
		in[20]*(fc2_k[20][6]) +
		in[21]*(fc2_k[21][6]) +
		in[22]*(fc2_k[22][6]) +
		in[23]*(fc2_k[23][6]) +
		in[24]*(fc2_k[24][6]) +
		in[25]*(fc2_k[25][6]) +
		in[26]*(fc2_k[26][6]) +
		in[27]*(fc2_k[27][6]) +
		in[28]*(fc2_k[28][6]) +
		in[29]*(fc2_k[29][6]) +
		in[30]*(fc2_k[30][6]) +
		in[31]*(fc2_k[31][6]) +
		in[32]*(fc2_k[32][6]) +
		in[33]*(fc2_k[33][6]) +
		in[34]*(fc2_k[34][6]) +
		in[35]*(fc2_k[35][6]) +
		in[36]*(fc2_k[36][6]) +
		in[37]*(fc2_k[37][6]) +
		in[38]*(fc2_k[38][6]) +
		in[39]*(fc2_k[39][6]) +
		in[40]*(fc2_k[40][6]) +
		in[41]*(fc2_k[41][6]) +
		in[42]*(fc2_k[42][6]) +
		in[43]*(fc2_k[43][6]) +
		in[44]*(fc2_k[44][6]) +
		in[45]*(fc2_k[45][6]) +
		in[46]*(fc2_k[46][6]) +
		in[47]*(fc2_k[47][6]) +
		in[48]*(fc2_k[48][6]) +
		in[49]*(fc2_k[49][6]) +
		(fc2_b[6]);
	out[7] =
		in[0]*(fc2_k[0][7]) +
		in[1]*(fc2_k[1][7]) +
		in[2]*(fc2_k[2][7]) +
		in[3]*(fc2_k[3][7]) +
		in[4]*(fc2_k[4][7]) +
		in[5]*(fc2_k[5][7]) +
		in[6]*(fc2_k[6][7]) +
		in[7]*(fc2_k[7][7]) +
		in[8]*(fc2_k[8][7]) +
		in[9]*(fc2_k[9][7]) +
		in[10]*(fc2_k[10][7]) +
		in[11]*(fc2_k[11][7]) +
		in[12]*(fc2_k[12][7]) +
		in[13]*(fc2_k[13][7]) +
		in[14]*(fc2_k[14][7]) +
		in[15]*(fc2_k[15][7]) +
		in[16]*(fc2_k[16][7]) +
		in[17]*(fc2_k[17][7]) +
		in[18]*(fc2_k[18][7]) +
		in[19]*(fc2_k[19][7]) +
		in[20]*(fc2_k[20][7]) +
		in[21]*(fc2_k[21][7]) +
		in[22]*(fc2_k[22][7]) +
		in[23]*(fc2_k[23][7]) +
		in[24]*(fc2_k[24][7]) +
		in[25]*(fc2_k[25][7]) +
		in[26]*(fc2_k[26][7]) +
		in[27]*(fc2_k[27][7]) +
		in[28]*(fc2_k[28][7]) +
		in[29]*(fc2_k[29][7]) +
		in[30]*(fc2_k[30][7]) +
		in[31]*(fc2_k[31][7]) +
		in[32]*(fc2_k[32][7]) +
		in[33]*(fc2_k[33][7]) +
		in[34]*(fc2_k[34][7]) +
		in[35]*(fc2_k[35][7]) +
		in[36]*(fc2_k[36][7]) +
		in[37]*(fc2_k[37][7]) +
		in[38]*(fc2_k[38][7]) +
		in[39]*(fc2_k[39][7]) +
		in[40]*(fc2_k[40][7]) +
		in[41]*(fc2_k[41][7]) +
		in[42]*(fc2_k[42][7]) +
		in[43]*(fc2_k[43][7]) +
		in[44]*(fc2_k[44][7]) +
		in[45]*(fc2_k[45][7]) +
		in[46]*(fc2_k[46][7]) +
		in[47]*(fc2_k[47][7]) +
		in[48]*(fc2_k[48][7]) +
		in[49]*(fc2_k[49][7]) +
		(fc2_b[7]);
	out[8] =
		in[0]*(fc2_k[0][8]) +
		in[1]*(fc2_k[1][8]) +
		in[2]*(fc2_k[2][8]) +
		in[3]*(fc2_k[3][8]) +
		in[4]*(fc2_k[4][8]) +
		in[5]*(fc2_k[5][8]) +
		in[6]*(fc2_k[6][8]) +
		in[7]*(fc2_k[7][8]) +
		in[8]*(fc2_k[8][8]) +
		in[9]*(fc2_k[9][8]) +
		in[10]*(fc2_k[10][8]) +
		in[11]*(fc2_k[11][8]) +
		in[12]*(fc2_k[12][8]) +
		in[13]*(fc2_k[13][8]) +
		in[14]*(fc2_k[14][8]) +
		in[15]*(fc2_k[15][8]) +
		in[16]*(fc2_k[16][8]) +
		in[17]*(fc2_k[17][8]) +
		in[18]*(fc2_k[18][8]) +
		in[19]*(fc2_k[19][8]) +
		in[20]*(fc2_k[20][8]) +
		in[21]*(fc2_k[21][8]) +
		in[22]*(fc2_k[22][8]) +
		in[23]*(fc2_k[23][8]) +
		in[24]*(fc2_k[24][8]) +
		in[25]*(fc2_k[25][8]) +
		in[26]*(fc2_k[26][8]) +
		in[27]*(fc2_k[27][8]) +
		in[28]*(fc2_k[28][8]) +
		in[29]*(fc2_k[29][8]) +
		in[30]*(fc2_k[30][8]) +
		in[31]*(fc2_k[31][8]) +
		in[32]*(fc2_k[32][8]) +
		in[33]*(fc2_k[33][8]) +
		in[34]*(fc2_k[34][8]) +
		in[35]*(fc2_k[35][8]) +
		in[36]*(fc2_k[36][8]) +
		in[37]*(fc2_k[37][8]) +
		in[38]*(fc2_k[38][8]) +
		in[39]*(fc2_k[39][8]) +
		in[40]*(fc2_k[40][8]) +
		in[41]*(fc2_k[41][8]) +
		in[42]*(fc2_k[42][8]) +
		in[43]*(fc2_k[43][8]) +
		in[44]*(fc2_k[44][8]) +
		in[45]*(fc2_k[45][8]) +
		in[46]*(fc2_k[46][8]) +
		in[47]*(fc2_k[47][8]) +
		in[48]*(fc2_k[48][8]) +
		in[49]*(fc2_k[49][8]) +
		(fc2_b[8]);
	out[9] =
		in[0]*(fc2_k[0][9]) +
		in[1]*(fc2_k[1][9]) +
		in[2]*(fc2_k[2][9]) +
		in[3]*(fc2_k[3][9]) +
		in[4]*(fc2_k[4][9]) +
		in[5]*(fc2_k[5][9]) +
		in[6]*(fc2_k[6][9]) +
		in[7]*(fc2_k[7][9]) +
		in[8]*(fc2_k[8][9]) +
		in[9]*(fc2_k[9][9]) +
		in[10]*(fc2_k[10][9]) +
		in[11]*(fc2_k[11][9]) +
		in[12]*(fc2_k[12][9]) +
		in[13]*(fc2_k[13][9]) +
		in[14]*(fc2_k[14][9]) +
		in[15]*(fc2_k[15][9]) +
		in[16]*(fc2_k[16][9]) +
		in[17]*(fc2_k[17][9]) +
		in[18]*(fc2_k[18][9]) +
		in[19]*(fc2_k[19][9]) +
		in[20]*(fc2_k[20][9]) +
		in[21]*(fc2_k[21][9]) +
		in[22]*(fc2_k[22][9]) +
		in[23]*(fc2_k[23][9]) +
		in[24]*(fc2_k[24][9]) +
		in[25]*(fc2_k[25][9]) +
		in[26]*(fc2_k[26][9]) +
		in[27]*(fc2_k[27][9]) +
		in[28]*(fc2_k[28][9]) +
		in[29]*(fc2_k[29][9]) +
		in[30]*(fc2_k[30][9]) +
		in[31]*(fc2_k[31][9]) +
		in[32]*(fc2_k[32][9]) +
		in[33]*(fc2_k[33][9]) +
		in[34]*(fc2_k[34][9]) +
		in[35]*(fc2_k[35][9]) +
		in[36]*(fc2_k[36][9]) +
		in[37]*(fc2_k[37][9]) +
		in[38]*(fc2_k[38][9]) +
		in[39]*(fc2_k[39][9]) +
		in[40]*(fc2_k[40][9]) +
		in[41]*(fc2_k[41][9]) +
		in[42]*(fc2_k[42][9]) +
		in[43]*(fc2_k[43][9]) +
		in[44]*(fc2_k[44][9]) +
		in[45]*(fc2_k[45][9]) +
		in[46]*(fc2_k[46][9]) +
		in[47]*(fc2_k[47][9]) +
		in[48]*(fc2_k[48][9]) +
		in[49]*(fc2_k[49][9]) +
		(fc2_b[9]);
}



#elif FC_COMPUTATION_TYPE == 2
inline void fc_1(int in[27], int out[50]){
	out[0] =
		in[0]*(-26) +
		in[1]*(-9) +
		in[2]*(6) +
		in[3]*(4) +
		in[4]*(2) +
		in[5]*(-8) +
		in[6]*(0) +
		in[7]*(37) +
		in[8]*(19) +
		in[9]*(8) +
		in[10]*(12) +
		in[11]*(-20) +
		in[12]*(31) +
		in[13]*(2) +
		in[14]*(-23) +
		in[15]*(2) +
		in[16]*(-20) +
		in[17]*(20) +
		in[18]*(-4) +
		in[19]*(-48) +
		in[20]*(29) +
		in[21]*(-3) +
		in[22]*(-6) +
		in[23]*(8) +
		in[24]*(1) +
		in[25]*(-51) +
		in[26]*(9) +
		(50);
	out[1] =
		in[0]*(15) +
		in[1]*(-22) +
		in[2]*(-14) +
		in[3]*(-6) +
		in[4]*(-5) +
		in[5]*(37) +
		in[6]*(14) +
		in[7]*(4) +
		in[8]*(42) +
		in[9]*(-12) +
		in[10]*(-17) +
		in[11]*(15) +
		in[12]*(13) +
		in[13]*(-2) +
		in[14]*(-1) +
		in[15]*(8) +
		in[16]*(-23) +
		in[17]*(-16) +
		in[18]*(-5) +
		in[19]*(20) +
		in[20]*(-12) +
		in[21]*(6) +
		in[22]*(14) +
		in[23]*(12) +
		in[24]*(41) +
		in[25]*(7) +
		in[26]*(27) +
		(-51);
	out[2] =
		in[0]*(3) +
		in[1]*(0) +
		in[2]*(-24) +
		in[3]*(7) +
		in[4]*(22) +
		in[5]*(-18) +
		in[6]*(15) +
		in[7]*(-30) +
		in[8]*(-20) +
		in[9]*(-1) +
		in[10]*(-21) +
		in[11]*(4) +
		in[12]*(2) +
		in[13]*(-4) +
		in[14]*(14) +
		in[15]*(-9) +
		in[16]*(25) +
		in[17]*(-10) +
		in[18]*(29) +
		in[19]*(-12) +
		in[20]*(-3) +
		in[21]*(7) +
		in[22]*(20) +
		in[23]*(21) +
		in[24]*(-13) +
		in[25]*(15) +
		in[26]*(2) +
		(-35);
	out[3] =
		in[0]*(-32) +
		in[1]*(-33) +
		in[2]*(-5) +
		in[3]*(15) +
		in[4]*(23) +
		in[5]*(-9) +
		in[6]*(-77) +
		in[7]*(-31) +
		in[8]*(-21) +
		in[9]*(-27) +
		in[10]*(42) +
		in[11]*(7) +
		in[12]*(11) +
		in[13]*(-15) +
		in[14]*(8) +
		in[15]*(-52) +
		in[16]*(-11) +
		in[17]*(7) +
		in[18]*(-23) +
		in[19]*(4) +
		in[20]*(-4) +
		in[21]*(-25) +
		in[22]*(-41) +
		in[23]*(11) +
		in[24]*(16) +
		in[25]*(6) +
		in[26]*(0) +
		(97);
	out[4] =
		in[0]*(-26) +
		in[1]*(6) +
		in[2]*(38) +
		in[3]*(-14) +
		in[4]*(-30) +
		in[5]*(11) +
		in[6]*(2) +
		in[7]*(5) +
		in[8]*(-5) +
		in[9]*(10) +
		in[10]*(-27) +
		in[11]*(7) +
		in[12]*(26) +
		in[13]*(18) +
		in[14]*(-2) +
		in[15]*(14) +
		in[16]*(1) +
		in[17]*(26) +
		in[18]*(51) +
		in[19]*(-12) +
		in[20]*(-15) +
		in[21]*(43) +
		in[22]*(3) +
		in[23]*(15) +
		in[24]*(3) +
		in[25]*(-12) +
		in[26]*(-30) +
		(-4);
	out[5] =
		in[0]*(-3) +
		in[1]*(10) +
		in[2]*(-9) +
		in[3]*(0) +
		in[4]*(-11) +
		in[5]*(-14) +
		in[6]*(29) +
		in[7]*(-17) +
		in[8]*(-16) +
		in[9]*(-15) +
		in[10]*(-13) +
		in[11]*(-5) +
		in[12]*(-13) +
		in[13]*(6) +
		in[14]*(0) +
		in[15]*(-33) +
		in[16]*(14) +
		in[17]*(-20) +
		in[18]*(10) +
		in[19]*(33) +
		in[20]*(1) +
		in[21]*(-4) +
		in[22]*(47) +
		in[23]*(-22) +
		in[24]*(-2) +
		in[25]*(5) +
		in[26]*(39) +
		(45);
	out[6] =
		in[0]*(4) +
		in[1]*(-24) +
		in[2]*(-11) +
		in[3]*(-38) +
		in[4]*(14) +
		in[5]*(-11) +
		in[6]*(-2) +
		in[7]*(-20) +
		in[8]*(-40) +
		in[9]*(-34) +
		in[10]*(19) +
		in[11]*(17) +
		in[12]*(23) +
		in[13]*(1) +
		in[14]*(7) +
		in[15]*(32) +
		in[16]*(-3) +
		in[17]*(-5) +
		in[18]*(3) +
		in[19]*(-16) +
		in[20]*(10) +
		in[21]*(-25) +
		in[22]*(-3) +
		in[23]*(2) +
		in[24]*(56) +
		in[25]*(43) +
		in[26]*(35) +
		(22);
	out[7] =
		in[0]*(8) +
		in[1]*(-1) +
		in[2]*(-15) +
		in[3]*(18) +
		in[4]*(3) +
		in[5]*(19) +
		in[6]*(-23) +
		in[7]*(-6) +
		in[8]*(18) +
		in[9]*(-27) +
		in[10]*(-28) +
		in[11]*(31) +
		in[12]*(-11) +
		in[13]*(-6) +
		in[14]*(-11) +
		in[15]*(-7) +
		in[16]*(-25) +
		in[17]*(31) +
		in[18]*(-7) +
		in[19]*(7) +
		in[20]*(-69) +
		in[21]*(0) +
		in[22]*(11) +
		in[23]*(-21) +
		in[24]*(8) +
		in[25]*(70) +
		in[26]*(2) +
		(-5);
	out[8] =
		in[0]*(-5) +
		in[1]*(10) +
		in[2]*(-8) +
		in[3]*(-7) +
		in[4]*(8) +
		in[5]*(-21) +
		in[6]*(10) +
		in[7]*(3) +
		in[8]*(-48) +
		in[9]*(-2) +
		in[10]*(-8) +
		in[11]*(-5) +
		in[12]*(3) +
		in[13]*(7) +
		in[14]*(25) +
		in[15]*(-5) +
		in[16]*(-30) +
		in[17]*(13) +
		in[18]*(1) +
		in[19]*(19) +
		in[20]*(11) +
		in[21]*(-5) +
		in[22]*(-5) +
		in[23]*(26) +
		in[24]*(4) +
		in[25]*(69) +
		in[26]*(-43) +
		(-40);
	out[9] =
		in[0]*(-29) +
		in[1]*(8) +
		in[2]*(4) +
		in[3]*(5) +
		in[4]*(15) +
		in[5]*(11) +
		in[6]*(21) +
		in[7]*(39) +
		in[8]*(12) +
		in[9]*(25) +
		in[10]*(-21) +
		in[11]*(-5) +
		in[12]*(1) +
		in[13]*(15) +
		in[14]*(25) +
		in[15]*(6) +
		in[16]*(-12) +
		in[17]*(-30) +
		in[18]*(26) +
		in[19]*(-32) +
		in[20]*(60) +
		in[21]*(16) +
		in[22]*(-25) +
		in[23]*(-2) +
		in[24]*(6) +
		in[25]*(11) +
		in[26]*(0) +
		(-9);
	out[10] =
		in[0]*(-21) +
		in[1]*(22) +
		in[2]*(8) +
		in[3]*(4) +
		in[4]*(-20) +
		in[5]*(12) +
		in[6]*(22) +
		in[7]*(-10) +
		in[8]*(-21) +
		in[9]*(11) +
		in[10]*(-19) +
		in[11]*(-9) +
		in[12]*(0) +
		in[13]*(-6) +
		in[14]*(-15) +
		in[15]*(3) +
		in[16]*(19) +
		in[17]*(19) +
		in[18]*(-6) +
		in[19]*(19) +
		in[20]*(-24) +
		in[21]*(-7) +
		in[22]*(-15) +
		in[23]*(-24) +
		in[24]*(3) +
		in[25]*(3) +
		in[26]*(-23) +
		(2);
	out[11] =
		in[0]*(-8) +
		in[1]*(-19) +
		in[2]*(-4) +
		in[3]*(14) +
		in[4]*(-24) +
		in[5]*(-40) +
		in[6]*(-3) +
		in[7]*(2) +
		in[8]*(-8) +
		in[9]*(31) +
		in[10]*(21) +
		in[11]*(15) +
		in[12]*(-7) +
		in[13]*(14) +
		in[14]*(6) +
		in[15]*(1) +
		in[16]*(16) +
		in[17]*(-51) +
		in[18]*(-29) +
		in[19]*(-8) +
		in[20]*(25) +
		in[21]*(13) +
		in[22]*(4) +
		in[23]*(-4) +
		in[24]*(-24) +
		in[25]*(5) +
		in[26]*(38) +
		(12);
	out[12] =
		in[0]*(3) +
		in[1]*(17) +
		in[2]*(30) +
		in[3]*(6) +
		in[4]*(3) +
		in[5]*(9) +
		in[6]*(-20) +
		in[7]*(-36) +
		in[8]*(10) +
		in[9]*(10) +
		in[10]*(-8) +
		in[11]*(7) +
		in[12]*(12) +
		in[13]*(-2) +
		in[14]*(-42) +
		in[15]*(2) +
		in[16]*(-8) +
		in[17]*(36) +
		in[18]*(-12) +
		in[19]*(-24) +
		in[20]*(27) +
		in[21]*(5) +
		in[22]*(-51) +
		in[23]*(-31) +
		in[24]*(23) +
		in[25]*(41) +
		in[26]*(5) +
		(97);
	out[13] =
		in[0]*(15) +
		in[1]*(-26) +
		in[2]*(-91) +
		in[3]*(23) +
		in[4]*(-25) +
		in[5]*(-12) +
		in[6]*(-31) +
		in[7]*(-3) +
		in[8]*(-2) +
		in[9]*(18) +
		in[10]*(-37) +
		in[11]*(-66) +
		in[12]*(6) +
		in[13]*(-4) +
		in[14]*(-3) +
		in[15]*(-36) +
		in[16]*(-11) +
		in[17]*(11) +
		in[18]*(13) +
		in[19]*(-2) +
		in[20]*(-62) +
		in[21]*(18) +
		in[22]*(23) +
		in[23]*(-25) +
		in[24]*(13) +
		in[25]*(55) +
		in[26]*(40) +
		(-2);
	out[14] =
		in[0]*(10) +
		in[1]*(15) +
		in[2]*(49) +
		in[3]*(3) +
		in[4]*(11) +
		in[5]*(9) +
		in[6]*(18) +
		in[7]*(-31) +
		in[8]*(11) +
		in[9]*(-16) +
		in[10]*(-8) +
		in[11]*(-38) +
		in[12]*(-25) +
		in[13]*(16) +
		in[14]*(7) +
		in[15]*(-12) +
		in[16]*(-19) +
		in[17]*(-22) +
		in[18]*(-1) +
		in[19]*(-47) +
		in[20]*(-33) +
		in[21]*(0) +
		in[22]*(-76) +
		in[23]*(-28) +
		in[24]*(45) +
		in[25]*(5) +
		in[26]*(7) +
		(85);
	out[15] =
		in[0]*(20) +
		in[1]*(9) +
		in[2]*(17) +
		in[3]*(10) +
		in[4]*(16) +
		in[5]*(-9) +
		in[6]*(-16) +
		in[7]*(-33) +
		in[8]*(-2) +
		in[9]*(18) +
		in[10]*(-47) +
		in[11]*(27) +
		in[12]*(11) +
		in[13]*(-43) +
		in[14]*(21) +
		in[15]*(-19) +
		in[16]*(16) +
		in[17]*(33) +
		in[18]*(27) +
		in[19]*(26) +
		in[20]*(-13) +
		in[21]*(-46) +
		in[22]*(6) +
		in[23]*(-3) +
		in[24]*(-33) +
		in[25]*(-32) +
		in[26]*(-40) +
		(13);
	out[16] =
		in[0]*(18) +
		in[1]*(5) +
		in[2]*(-13) +
		in[3]*(14) +
		in[4]*(-2) +
		in[5]*(-24) +
		in[6]*(31) +
		in[7]*(5) +
		in[8]*(-30) +
		in[9]*(8) +
		in[10]*(48) +
		in[11]*(-17) +
		in[12]*(3) +
		in[13]*(29) +
		in[14]*(-11) +
		in[15]*(-17) +
		in[16]*(25) +
		in[17]*(48) +
		in[18]*(21) +
		in[19]*(-38) +
		in[20]*(-26) +
		in[21]*(24) +
		in[22]*(0) +
		in[23]*(-5) +
		in[24]*(-37) +
		in[25]*(-15) +
		in[26]*(18) +
		(-53);
	out[17] =
		in[0]*(18) +
		in[1]*(-7) +
		in[2]*(-32) +
		in[3]*(-11) +
		in[4]*(22) +
		in[5]*(16) +
		in[6]*(37) +
		in[7]*(18) +
		in[8]*(-14) +
		in[9]*(-4) +
		in[10]*(22) +
		in[11]*(-41) +
		in[12]*(-9) +
		in[13]*(-22) +
		in[14]*(-16) +
		in[15]*(9) +
		in[16]*(40) +
		in[17]*(-18) +
		in[18]*(-25) +
		in[19]*(25) +
		in[20]*(-45) +
		in[21]*(-9) +
		in[22]*(-15) +
		in[23]*(13) +
		in[24]*(-54) +
		in[25]*(-6) +
		in[26]*(15) +
		(8);
	out[18] =
		in[0]*(1) +
		in[1]*(-14) +
		in[2]*(-13) +
		in[3]*(31) +
		in[4]*(-19) +
		in[5]*(-13) +
		in[6]*(18) +
		in[7]*(-14) +
		in[8]*(-15) +
		in[9]*(28) +
		in[10]*(-9) +
		in[11]*(23) +
		in[12]*(-4) +
		in[13]*(-2) +
		in[14]*(-4) +
		in[15]*(-10) +
		in[16]*(1) +
		in[17]*(-1) +
		in[18]*(-8) +
		in[19]*(12) +
		in[20]*(26) +
		in[21]*(-51) +
		in[22]*(16) +
		in[23]*(-3) +
		in[24]*(0) +
		in[25]*(18) +
		in[26]*(-5) +
		(-13);
	out[19] =
		in[0]*(1) +
		in[1]*(-12) +
		in[2]*(14) +
		in[3]*(1) +
		in[4]*(4) +
		in[5]*(-6) +
		in[6]*(16) +
		in[7]*(15) +
		in[8]*(9) +
		in[9]*(8) +
		in[10]*(-3) +
		in[11]*(-21) +
		in[12]*(33) +
		in[13]*(-2) +
		in[14]*(12) +
		in[15]*(-11) +
		in[16]*(-44) +
		in[17]*(-5) +
		in[18]*(-23) +
		in[19]*(20) +
		in[20]*(13) +
		in[21]*(-25) +
		in[22]*(3) +
		in[23]*(23) +
		in[24]*(53) +
		in[25]*(-2) +
		in[26]*(23) +
		(40);
	out[20] =
		in[0]*(17) +
		in[1]*(5) +
		in[2]*(3) +
		in[3]*(-33) +
		in[4]*(-12) +
		in[5]*(16) +
		in[6]*(-5) +
		in[7]*(4) +
		in[8]*(-7) +
		in[9]*(-33) +
		in[10]*(12) +
		in[11]*(2) +
		in[12]*(-23) +
		in[13]*(-6) +
		in[14]*(31) +
		in[15]*(-2) +
		in[16]*(36) +
		in[17]*(0) +
		in[18]*(2) +
		in[19]*(-15) +
		in[20]*(-27) +
		in[21]*(9) +
		in[22]*(36) +
		in[23]*(9) +
		in[24]*(-12) +
		in[25]*(-22) +
		in[26]*(-11) +
		(39);
	out[21] =
		in[0]*(0) +
		in[1]*(-22) +
		in[2]*(3) +
		in[3]*(-11) +
		in[4]*(10) +
		in[5]*(-10) +
		in[6]*(-43) +
		in[7]*(30) +
		in[8]*(-14) +
		in[9]*(10) +
		in[10]*(-54) +
		in[11]*(-9) +
		in[12]*(5) +
		in[13]*(-5) +
		in[14]*(-32) +
		in[15]*(11) +
		in[16]*(-4) +
		in[17]*(23) +
		in[18]*(-15) +
		in[19]*(21) +
		in[20]*(22) +
		in[21]*(3) +
		in[22]*(24) +
		in[23]*(-11) +
		in[24]*(25) +
		in[25]*(36) +
		in[26]*(3) +
		(39);
	out[22] =
		in[0]*(-13) +
		in[1]*(-13) +
		in[2]*(5) +
		in[3]*(9) +
		in[4]*(27) +
		in[5]*(22) +
		in[6]*(15) +
		in[7]*(12) +
		in[8]*(-8) +
		in[9]*(-20) +
		in[10]*(24) +
		in[11]*(-11) +
		in[12]*(16) +
		in[13]*(5) +
		in[14]*(-31) +
		in[15]*(29) +
		in[16]*(-23) +
		in[17]*(3) +
		in[18]*(-10) +
		in[19]*(-1) +
		in[20]*(6) +
		in[21]*(10) +
		in[22]*(26) +
		in[23]*(33) +
		in[24]*(-53) +
		in[25]*(-17) +
		in[26]*(23) +
		(-29);
	out[23] =
		in[0]*(7) +
		in[1]*(-1) +
		in[2]*(-19) +
		in[3]*(-18) +
		in[4]*(-2) +
		in[5]*(20) +
		in[6]*(2) +
		in[7]*(-11) +
		in[8]*(-25) +
		in[9]*(20) +
		in[10]*(4) +
		in[11]*(-14) +
		in[12]*(44) +
		in[13]*(10) +
		in[14]*(20) +
		in[15]*(23) +
		in[16]*(14) +
		in[17]*(-12) +
		in[18]*(-20) +
		in[19]*(17) +
		in[20]*(-16) +
		in[21]*(-19) +
		in[22]*(-20) +
		in[23]*(-7) +
		in[24]*(27) +
		in[25]*(0) +
		in[26]*(-6) +
		(91);
	out[24] =
		in[0]*(0) +
		in[1]*(13) +
		in[2]*(-14) +
		in[3]*(-24) +
		in[4]*(6) +
		in[5]*(-24) +
		in[6]*(-9) +
		in[7]*(10) +
		in[8]*(-8) +
		in[9]*(-5) +
		in[10]*(21) +
		in[11]*(-4) +
		in[12]*(10) +
		in[13]*(-12) +
		in[14]*(4) +
		in[15]*(-5) +
		in[16]*(24) +
		in[17]*(-9) +
		in[18]*(27) +
		in[19]*(5) +
		in[20]*(-17) +
		in[21]*(14) +
		in[22]*(6) +
		in[23]*(8) +
		in[24]*(0) +
		in[25]*(-8) +
		in[26]*(-44) +
		(56);
	out[25] =
		in[0]*(6) +
		in[1]*(1) +
		in[2]*(-24) +
		in[3]*(-9) +
		in[4]*(-11) +
		in[5]*(19) +
		in[6]*(-6) +
		in[7]*(-36) +
		in[8]*(28) +
		in[9]*(-2) +
		in[10]*(-1) +
		in[11]*(29) +
		in[12]*(4) +
		in[13]*(7) +
		in[14]*(-13) +
		in[15]*(6) +
		in[16]*(-9) +
		in[17]*(12) +
		in[18]*(-10) +
		in[19]*(20) +
		in[20]*(-5) +
		in[21]*(-5) +
		in[22]*(35) +
		in[23]*(2) +
		in[24]*(-23) +
		in[25]*(-12) +
		in[26]*(-30) +
		(61);
	out[26] =
		in[0]*(-7) +
		in[1]*(-34) +
		in[2]*(-22) +
		in[3]*(4) +
		in[4]*(-28) +
		in[5]*(1) +
		in[6]*(13) +
		in[7]*(8) +
		in[8]*(-4) +
		in[9]*(2) +
		in[10]*(13) +
		in[11]*(8) +
		in[12]*(-3) +
		in[13]*(23) +
		in[14]*(23) +
		in[15]*(-21) +
		in[16]*(5) +
		in[17]*(13) +
		in[18]*(20) +
		in[19]*(-75) +
		in[20]*(-24) +
		in[21]*(-18) +
		in[22]*(-57) +
		in[23]*(-19) +
		in[24]*(-30) +
		in[25]*(-40) +
		in[26]*(-18) +
		(27);
	out[27] =
		in[0]*(-28) +
		in[1]*(7) +
		in[2]*(17) +
		in[3]*(-22) +
		in[4]*(11) +
		in[5]*(-5) +
		in[6]*(-31) +
		in[7]*(30) +
		in[8]*(15) +
		in[9]*(-25) +
		in[10]*(-3) +
		in[11]*(6) +
		in[12]*(-17) +
		in[13]*(12) +
		in[14]*(0) +
		in[15]*(4) +
		in[16]*(-21) +
		in[17]*(0) +
		in[18]*(-15) +
		in[19]*(-6) +
		in[20]*(-18) +
		in[21]*(-21) +
		in[22]*(13) +
		in[23]*(12) +
		in[24]*(-30) +
		in[25]*(12) +
		in[26]*(25) +
		(23);
	out[28] =
		in[0]*(-8) +
		in[1]*(-32) +
		in[2]*(22) +
		in[3]*(-8) +
		in[4]*(27) +
		in[5]*(-43) +
		in[6]*(-14) +
		in[7]*(6) +
		in[8]*(-43) +
		in[9]*(-13) +
		in[10]*(-5) +
		in[11]*(26) +
		in[12]*(9) +
		in[13]*(10) +
		in[14]*(-37) +
		in[15]*(0) +
		in[16]*(-16) +
		in[17]*(-64) +
		in[18]*(13) +
		in[19]*(5) +
		in[20]*(21) +
		in[21]*(-11) +
		in[22]*(2) +
		in[23]*(-15) +
		in[24]*(-25) +
		in[25]*(-2) +
		in[26]*(17) +
		(4);
	out[29] =
		in[0]*(-11) +
		in[1]*(16) +
		in[2]*(-7) +
		in[3]*(-9) +
		in[4]*(1) +
		in[5]*(5) +
		in[6]*(4) +
		in[7]*(-21) +
		in[8]*(-3) +
		in[9]*(-11) +
		in[10]*(25) +
		in[11]*(-40) +
		in[12]*(8) +
		in[13]*(25) +
		in[14]*(-34) +
		in[15]*(29) +
		in[16]*(2) +
		in[17]*(-8) +
		in[18]*(-21) +
		in[19]*(-2) +
		in[20]*(4) +
		in[21]*(-12) +
		in[22]*(-58) +
		in[23]*(0) +
		in[24]*(-10) +
		in[25]*(22) +
		in[26]*(-6) +
		(55);
	out[30] =
		in[0]*(-6) +
		in[1]*(-19) +
		in[2]*(-43) +
		in[3]*(-14) +
		in[4]*(-4) +
		in[5]*(-23) +
		in[6]*(-34) +
		in[7]*(-26) +
		in[8]*(-31) +
		in[9]*(12) +
		in[10]*(-5) +
		in[11]*(9) +
		in[12]*(4) +
		in[13]*(22) +
		in[14]*(30) +
		in[15]*(-29) +
		in[16]*(0) +
		in[17]*(-10) +
		in[18]*(-24) +
		in[19]*(-62) +
		in[20]*(-54) +
		in[21]*(6) +
		in[22]*(-27) +
		in[23]*(5) +
		in[24]*(11) +
		in[25]*(15) +
		in[26]*(5) +
		(73);
	out[31] =
		in[0]*(-29) +
		in[1]*(-36) +
		in[2]*(-14) +
		in[3]*(37) +
		in[4]*(-13) +
		in[5]*(30) +
		in[6]*(11) +
		in[7]*(-1) +
		in[8]*(20) +
		in[9]*(-1) +
		in[10]*(28) +
		in[11]*(22) +
		in[12]*(-29) +
		in[13]*(35) +
		in[14]*(-13) +
		in[15]*(-31) +
		in[16]*(-13) +
		in[17]*(-3) +
		in[18]*(11) +
		in[19]*(14) +
		in[20]*(-36) +
		in[21]*(17) +
		in[22]*(4) +
		in[23]*(-3) +
		in[24]*(5) +
		in[25]*(-4) +
		in[26]*(11) +
		(-19);
	out[32] =
		in[0]*(27) +
		in[1]*(-13) +
		in[2]*(-13) +
		in[3]*(-24) +
		in[4]*(-10) +
		in[5]*(1) +
		in[6]*(3) +
		in[7]*(14) +
		in[8]*(2) +
		in[9]*(1) +
		in[10]*(4) +
		in[11]*(20) +
		in[12]*(8) +
		in[13]*(35) +
		in[14]*(4) +
		in[15]*(3) +
		in[16]*(11) +
		in[17]*(21) +
		in[18]*(9) +
		in[19]*(-11) +
		in[20]*(-17) +
		in[21]*(20) +
		in[22]*(10) +
		in[23]*(17) +
		in[24]*(30) +
		in[25]*(-4) +
		in[26]*(2) +
		(-61);
	out[33] =
		in[0]*(43) +
		in[1]*(35) +
		in[2]*(4) +
		in[3]*(3) +
		in[4]*(-4) +
		in[5]*(8) +
		in[6]*(-1) +
		in[7]*(-13) +
		in[8]*(20) +
		in[9]*(35) +
		in[10]*(-36) +
		in[11]*(1) +
		in[12]*(-10) +
		in[13]*(-8) +
		in[14]*(2) +
		in[15]*(5) +
		in[16]*(1) +
		in[17]*(46) +
		in[18]*(5) +
		in[19]*(6) +
		in[20]*(14) +
		in[21]*(22) +
		in[22]*(14) +
		in[23]*(5) +
		in[24]*(11) +
		in[25]*(-7) +
		in[26]*(-25) +
		(3);
	out[34] =
		in[0]*(23) +
		in[1]*(15) +
		in[2]*(-5) +
		in[3]*(-21) +
		in[4]*(-22) +
		in[5]*(1) +
		in[6]*(-11) +
		in[7]*(14) +
		in[8]*(16) +
		in[9]*(-1) +
		in[10]*(-22) +
		in[11]*(-24) +
		in[12]*(24) +
		in[13]*(24) +
		in[14]*(3) +
		in[15]*(0) +
		in[16]*(17) +
		in[17]*(-10) +
		in[18]*(-12) +
		in[19]*(-20) +
		in[20]*(-3) +
		in[21]*(-8) +
		in[22]*(5) +
		in[23]*(12) +
		in[24]*(-4) +
		in[25]*(-15) +
		in[26]*(-9) +
		(104);
	out[35] =
		in[0]*(28) +
		in[1]*(-12) +
		in[2]*(-17) +
		in[3]*(17) +
		in[4]*(-3) +
		in[5]*(29) +
		in[6]*(-10) +
		in[7]*(-9) +
		in[8]*(-23) +
		in[9]*(-5) +
		in[10]*(-8) +
		in[11]*(19) +
		in[12]*(1) +
		in[13]*(-5) +
		in[14]*(2) +
		in[15]*(-2) +
		in[16]*(1) +
		in[17]*(12) +
		in[18]*(29) +
		in[19]*(-2) +
		in[20]*(-8) +
		in[21]*(-10) +
		in[22]*(23) +
		in[23]*(10) +
		in[24]*(-15) +
		in[25]*(-1) +
		in[26]*(33) +
		(-71);
	out[36] =
		in[0]*(-3) +
		in[1]*(-7) +
		in[2]*(0) +
		in[3]*(-24) +
		in[4]*(-14) +
		in[5]*(-23) +
		in[6]*(8) +
		in[7]*(-13) +
		in[8]*(-9) +
		in[9]*(46) +
		in[10]*(0) +
		in[11]*(4) +
		in[12]*(42) +
		in[13]*(19) +
		in[14]*(14) +
		in[15]*(-7) +
		in[16]*(31) +
		in[17]*(-3) +
		in[18]*(29) +
		in[19]*(-12) +
		in[20]*(40) +
		in[21]*(-9) +
		in[22]*(24) +
		in[23]*(-2) +
		in[24]*(-10) +
		in[25]*(28) +
		in[26]*(20) +
		(47);
	out[37] =
		in[0]*(0) +
		in[1]*(7) +
		in[2]*(13) +
		in[3]*(6) +
		in[4]*(-36) +
		in[5]*(28) +
		in[6]*(-10) +
		in[7]*(-22) +
		in[8]*(24) +
		in[9]*(5) +
		in[10]*(0) +
		in[11]*(-31) +
		in[12]*(6) +
		in[13]*(-13) +
		in[14]*(4) +
		in[15]*(2) +
		in[16]*(-11) +
		in[17]*(-6) +
		in[18]*(-5) +
		in[19]*(-15) +
		in[20]*(-48) +
		in[21]*(22) +
		in[22]*(18) +
		in[23]*(14) +
		in[24]*(-30) +
		in[25]*(47) +
		in[26]*(31) +
		(57);
	out[38] =
		in[0]*(-11) +
		in[1]*(12) +
		in[2]*(-2) +
		in[3]*(-10) +
		in[4]*(21) +
		in[5]*(23) +
		in[6]*(-12) +
		in[7]*(-29) +
		in[8]*(-55) +
		in[9]*(21) +
		in[10]*(-27) +
		in[11]*(-5) +
		in[12]*(1) +
		in[13]*(-10) +
		in[14]*(-49) +
		in[15]*(-2) +
		in[16]*(36) +
		in[17]*(31) +
		in[18]*(-3) +
		in[19]*(3) +
		in[20]*(3) +
		in[21]*(-3) +
		in[22]*(7) +
		in[23]*(-1) +
		in[24]*(-7) +
		in[25]*(4) +
		in[26]*(29) +
		(17);
	out[39] =
		in[0]*(18) +
		in[1]*(34) +
		in[2]*(-32) +
		in[3]*(-5) +
		in[4]*(-7) +
		in[5]*(5) +
		in[6]*(-16) +
		in[7]*(-23) +
		in[8]*(-14) +
		in[9]*(-4) +
		in[10]*(0) +
		in[11]*(-6) +
		in[12]*(24) +
		in[13]*(28) +
		in[14]*(-18) +
		in[15]*(14) +
		in[16]*(10) +
		in[17]*(-16) +
		in[18]*(-29) +
		in[19]*(26) +
		in[20]*(-70) +
		in[21]*(-9) +
		in[22]*(15) +
		in[23]*(-8) +
		in[24]*(-15) +
		in[25]*(-61) +
		in[26]*(49) +
		(-88);
	out[40] =
		in[0]*(-54) +
		in[1]*(-24) +
		in[2]*(-24) +
		in[3]*(-7) +
		in[4]*(-6) +
		in[5]*(-9) +
		in[6]*(-27) +
		in[7]*(-34) +
		in[8]*(-6) +
		in[9]*(-10) +
		in[10]*(-8) +
		in[11]*(-15) +
		in[12]*(-23) +
		in[13]*(20) +
		in[14]*(-15) +
		in[15]*(11) +
		in[16]*(-28) +
		in[17]*(12) +
		in[18]*(-71) +
		in[19]*(-49) +
		in[20]*(-2) +
		in[21]*(19) +
		in[22]*(29) +
		in[23]*(24) +
		in[24]*(-24) +
		in[25]*(5) +
		in[26]*(3) +
		(53);
	out[41] =
		in[0]*(13) +
		in[1]*(25) +
		in[2]*(-68) +
		in[3]*(14) +
		in[4]*(-2) +
		in[5]*(-20) +
		in[6]*(-13) +
		in[7]*(-43) +
		in[8]*(-29) +
		in[9]*(6) +
		in[10]*(5) +
		in[11]*(-76) +
		in[12]*(11) +
		in[13]*(11) +
		in[14]*(12) +
		in[15]*(7) +
		in[16]*(-13) +
		in[17]*(30) +
		in[18]*(-6) +
		in[19]*(-27) +
		in[20]*(-16) +
		in[21]*(-4) +
		in[22]*(17) +
		in[23]*(-6) +
		in[24]*(3) +
		in[25]*(19) +
		in[26]*(-14) +
		(-29);
	out[42] =
		in[0]*(34) +
		in[1]*(25) +
		in[2]*(-52) +
		in[3]*(-10) +
		in[4]*(12) +
		in[5]*(-25) +
		in[6]*(-39) +
		in[7]*(7) +
		in[8]*(-18) +
		in[9]*(-41) +
		in[10]*(-28) +
		in[11]*(-34) +
		in[12]*(0) +
		in[13]*(6) +
		in[14]*(-27) +
		in[15]*(-5) +
		in[16]*(-23) +
		in[17]*(-5) +
		in[18]*(51) +
		in[19]*(-63) +
		in[20]*(-42) +
		in[21]*(-1) +
		in[22]*(-5) +
		in[23]*(14) +
		in[24]*(22) +
		in[25]*(11) +
		in[26]*(58) +
		(57);
	out[43] =
		in[0]*(-1) +
		in[1]*(0) +
		in[2]*(-25) +
		in[3]*(21) +
		in[4]*(26) +
		in[5]*(-12) +
		in[6]*(28) +
		in[7]*(11) +
		in[8]*(10) +
		in[9]*(-1) +
		in[10]*(-23) +
		in[11]*(14) +
		in[12]*(11) +
		in[13]*(-6) +
		in[14]*(19) +
		in[15]*(-9) +
		in[16]*(7) +
		in[17]*(3) +
		in[18]*(-19) +
		in[19]*(-16) +
		in[20]*(39) +
		in[21]*(8) +
		in[22]*(37) +
		in[23]*(31) +
		in[24]*(-11) +
		in[25]*(-11) +
		in[26]*(-20) +
		(-26);
	out[44] =
		in[0]*(-8) +
		in[1]*(-29) +
		in[2]*(11) +
		in[3]*(-18) +
		in[4]*(14) +
		in[5]*(24) +
		in[6]*(-32) +
		in[7]*(-12) +
		in[8]*(4) +
		in[9]*(-8) +
		in[10]*(21) +
		in[11]*(-16) +
		in[12]*(32) +
		in[13]*(0) +
		in[14]*(8) +
		in[15]*(27) +
		in[16]*(24) +
		in[17]*(-6) +
		in[18]*(38) +
		in[19]*(22) +
		in[20]*(28) +
		in[21]*(-7) +
		in[22]*(34) +
		in[23]*(2) +
		in[24]*(-28) +
		in[25]*(8) +
		in[26]*(50) +
		(-91);
	out[45] =
		in[0]*(0) +
		in[1]*(14) +
		in[2]*(-2) +
		in[3]*(-3) +
		in[4]*(16) +
		in[5]*(16) +
		in[6]*(43) +
		in[7]*(21) +
		in[8]*(4) +
		in[9]*(-10) +
		in[10]*(-9) +
		in[11]*(-35) +
		in[12]*(7) +
		in[13]*(26) +
		in[14]*(-8) +
		in[15]*(-8) +
		in[16]*(-6) +
		in[17]*(11) +
		in[18]*(32) +
		in[19]*(-11) +
		in[20]*(-7) +
		in[21]*(11) +
		in[22]*(-2) +
		in[23]*(-8) +
		in[24]*(59) +
		in[25]*(2) +
		in[26]*(-14) +
		(56);
	out[46] =
		in[0]*(30) +
		in[1]*(30) +
		in[2]*(23) +
		in[3]*(18) +
		in[4]*(-7) +
		in[5]*(-21) +
		in[6]*(16) +
		in[7]*(-6) +
		in[8]*(-19) +
		in[9]*(19) +
		in[10]*(-45) +
		in[11]*(7) +
		in[12]*(1) +
		in[13]*(18) +
		in[14]*(-4) +
		in[15]*(-12) +
		in[16]*(-6) +
		in[17]*(-4) +
		in[18]*(-22) +
		in[19]*(13) +
		in[20]*(-12) +
		in[21]*(19) +
		in[22]*(19) +
		in[23]*(23) +
		in[24]*(52) +
		in[25]*(-29) +
		in[26]*(13) +
		(71);
	out[47] =
		in[0]*(14) +
		in[1]*(-5) +
		in[2]*(16) +
		in[3]*(-12) +
		in[4]*(2) +
		in[5]*(26) +
		in[6]*(10) +
		in[7]*(-25) +
		in[8]*(1) +
		in[9]*(-31) +
		in[10]*(-11) +
		in[11]*(6) +
		in[12]*(6) +
		in[13]*(-3) +
		in[14]*(-9) +
		in[15]*(35) +
		in[16]*(15) +
		in[17]*(-8) +
		in[18]*(-34) +
		in[19]*(34) +
		in[20]*(1) +
		in[21]*(-9) +
		in[22]*(50) +
		in[23]*(26) +
		in[24]*(17) +
		in[25]*(53) +
		in[26]*(4) +
		(-61);
	out[48] =
		in[0]*(-6) +
		in[1]*(-2) +
		in[2]*(2) +
		in[3]*(-13) +
		in[4]*(-4) +
		in[5]*(-20) +
		in[6]*(5) +
		in[7]*(10) +
		in[8]*(12) +
		in[9]*(21) +
		in[10]*(-25) +
		in[11]*(-25) +
		in[12]*(-10) +
		in[13]*(-22) +
		in[14]*(18) +
		in[15]*(-3) +
		in[16]*(-17) +
		in[17]*(14) +
		in[18]*(-26) +
		in[19]*(17) +
		in[20]*(11) +
		in[21]*(-15) +
		in[22]*(-24) +
		in[23]*(-13) +
		in[24]*(2) +
		in[25]*(-2) +
		in[26]*(2) +
		(-3);
	out[49] =
		in[0]*(7) +
		in[1]*(-19) +
		in[2]*(-10) +
		in[3]*(2) +
		in[4]*(20) +
		in[5]*(11) +
		in[6]*(11) +
		in[7]*(-13) +
		in[8]*(-10) +
		in[9]*(-25) +
		in[10]*(1) +
		in[11]*(27) +
		in[12]*(-12) +
		in[13]*(7) +
		in[14]*(14) +
		in[15]*(9) +
		in[16]*(11) +
		in[17]*(-21) +
		in[18]*(-10) +
		in[19]*(14) +
		in[20]*(9) +
		in[21]*(-10) +
		in[22]*(-2) +
		in[23]*(-7) +
		in[24]*(-45) +
		in[25]*(55) +
		in[26]*(-30) +
		(22);
}

inline void fc_2(int in[50], int out[10]){
	out[0] =
		in[0]*(-5) +
		in[1]*(-16) +
		in[2]*(-8) +
		in[3]*(12) +
		in[4]*(46) +
		in[5]*(50) +
		in[6]*(-19) +
		in[7]*(-42) +
		in[8]*(37) +
		in[9]*(-34) +
		in[10]*(-51) +
		in[11]*(-34) +
		in[12]*(-25) +
		in[13]*(-54) +
		in[14]*(5) +
		in[15]*(-39) +
		in[16]*(45) +
		in[17]*(22) +
		in[18]*(-19) +
		in[19]*(-44) +
		in[20]*(-23) +
		in[21]*(-4) +
		in[22]*(2) +
		in[23]*(-7) +
		in[24]*(1) +
		in[25]*(-39) +
		in[26]*(40) +
		in[27]*(-13) +
		in[28]*(4) +
		in[29]*(-45) +
		in[30]*(-39) +
		in[31]*(31) +
		in[32]*(4) +
		in[33]*(-25) +
		in[34]*(-4) +
		in[35]*(27) +
		in[36]*(13) +
		in[37]*(54) +
		in[38]*(0) +
		in[39]*(32) +
		in[40]*(-116) +
		in[41]*(10) +
		in[42]*(-29) +
		in[43]*(-25) +
		in[44]*(18) +
		in[45]*(5) +
		in[46]*(-18) +
		in[47]*(11) +
		in[48]*(28) +
		in[49]*(-29) +
		(-3190);
	out[1] =
		in[0]*(33) +
		in[1]*(-19) +
		in[2]*(-37) +
		in[3]*(65) +
		in[4]*(9) +
		in[5]*(31) +
		in[6]*(-12) +
		in[7]*(-26) +
		in[8]*(4) +
		in[9]*(-5) +
		in[10]*(-37) +
		in[11]*(38) +
		in[12]*(53) +
		in[13]*(-36) +
		in[14]*(57) +
		in[15]*(-22) +
		in[16]*(-4) +
		in[17]*(-40) +
		in[18]*(-40) +
		in[19]*(40) +
		in[20]*(4) +
		in[21]*(29) +
		in[22]*(-13) +
		in[23]*(30) +
		in[24]*(-8) +
		in[25]*(18) +
		in[26]*(24) +
		in[27]*(-23) +
		in[28]*(-50) +
		in[29]*(20) +
		in[30]*(36) +
		in[31]*(-10) +
		in[32]*(-30) +
		in[33]*(1) +
		in[34]*(26) +
		in[35]*(-32) +
		in[36]*(29) +
		in[37]*(45) +
		in[38]*(25) +
		in[39]*(-45) +
		in[40]*(69) +
		in[41]*(-16) +
		in[42]*(53) +
		in[43]*(-4) +
		in[44]*(-23) +
		in[45]*(10) +
		in[46]*(9) +
		in[47]*(34) +
		in[48]*(13) +
		in[49]*(-32) +
		(12040);
	out[2] =
		in[0]*(30) +
		in[1]*(-4) +
		in[2]*(-14) +
		in[3]*(-19) +
		in[4]*(28) +
		in[5]*(44) +
		in[6]*(2) +
		in[7]*(-43) +
		in[8]*(1) +
		in[9]*(32) +
		in[10]*(13) +
		in[11]*(-42) +
		in[12]*(-15) +
		in[13]*(-35) +
		in[14]*(43) +
		in[15]*(-4) +
		in[16]*(-5) +
		in[17]*(-27) +
		in[18]*(-31) +
		in[19]*(-1) +
		in[20]*(9) +
		in[21]*(24) +
		in[22]*(41) +
		in[23]*(-31) +
		in[24]*(26) +
		in[25]*(-5) +
		in[26]*(-42) +
		in[27]*(-12) +
		in[28]*(-39) +
		in[29]*(33) +
		in[30]*(-63) +
		in[31]*(-21) +
		in[32]*(-6) +
		in[33]*(25) +
		in[34]*(-39) +
		in[35]*(-7) +
		in[36]*(-5) +
		in[37]*(-14) +
		in[38]*(-15) +
		in[39]*(-16) +
		in[40]*(-14) +
		in[41]*(-25) +
		in[42]*(-22) +
		in[43]*(7) +
		in[44]*(17) +
		in[45]*(31) +
		in[46]*(12) +
		in[47]*(-32) +
		in[48]*(-18) +
		in[49]*(-35) +
		(-353);
	out[3] =
		in[0]*(-17) +
		in[1]*(39) +
		in[2]*(11) +
		in[3]*(-61) +
		in[4]*(-24) +
		in[5]*(-16) +
		in[6]*(-37) +
		in[7]*(21) +
		in[8]*(-12) +
		in[9]*(31) +
		in[10]*(58) +
		in[11]*(-23) +
		in[12]*(-14) +
		in[13]*(41) +
		in[14]*(0) +
		in[15]*(-25) +
		in[16]*(-22) +
		in[17]*(-11) +
		in[18]*(-2) +
		in[19]*(28) +
		in[20]*(11) +
		in[21]*(21) +
		in[22]*(-17) +
		in[23]*(-18) +
		in[24]*(-12) +
		in[25]*(14) +
		in[26]*(-33) +
		in[27]*(-61) +
		in[28]*(-7) +
		in[29]*(-13) +
		in[30]*(-8) +
		in[31]*(16) +
		in[32]*(20) +
		in[33]*(-24) +
		in[34]*(-53) +
		in[35]*(-26) +
		in[36]*(-20) +
		in[37]*(-26) +
		in[38]*(-9) +
		in[39]*(10) +
		in[40]*(12) +
		in[41]*(-26) +
		in[42]*(33) +
		in[43]*(30) +
		in[44]*(11) +
		in[45]*(29) +
		in[46]*(-5) +
		in[47]*(8) +
		in[48]*(1) +
		in[49]*(-29) +
		(-2180);
	out[4] =
		in[0]*(-10) +
		in[1]*(-21) +
		in[2]*(28) +
		in[3]*(13) +
		in[4]*(25) +
		in[5]*(-19) +
		in[6]*(46) +
		in[7]*(15) +
		in[8]*(-29) +
		in[9]*(7) +
		in[10]*(-16) +
		in[11]*(-14) +
		in[12]*(31) +
		in[13]*(-6) +
		in[14]*(-23) +
		in[15]*(-42) +
		in[16]*(-20) +
		in[17]*(9) +
		in[18]*(-37) +
		in[19]*(-37) +
		in[20]*(-33) +
		in[21]*(7) +
		in[22]*(-32) +
		in[23]*(41) +
		in[24]*(20) +
		in[25]*(21) +
		in[26]*(-60) +
		in[27]*(3) +
		in[28]*(31) +
		in[29]*(-9) +
		in[30]*(-34) +
		in[31]*(-40) +
		in[32]*(7) +
		in[33]*(9) +
		in[34]*(15) +
		in[35]*(-44) +
		in[36]*(54) +
		in[37]*(-18) +
		in[38]*(-34) +
		in[39]*(18) +
		in[40]*(-43) +
		in[41]*(25) +
		in[42]*(-56) +
		in[43]*(12) +
		in[44]*(8) +
		in[45]*(21) +
		in[46]*(3) +
		in[47]*(-12) +
		in[48]*(-29) +
		in[49]*(-6) +
		(5337);
	out[5] =
		in[0]*(-23) +
		in[1]*(18) +
		in[2]*(-9) +
		in[3]*(1) +
		in[4]*(-47) +
		in[5]*(-20) +
		in[6]*(-14) +
		in[7]*(29) +
		in[8]*(-36) +
		in[9]*(-17) +
		in[10]*(-9) +
		in[11]*(-4) +
		in[12]*(-27) +
		in[13]*(31) +
		in[14]*(27) +
		in[15]*(4) +
		in[16]*(-41) +
		in[17]*(30) +
		in[18]*(-4) +
		in[19]*(8) +
		in[20]*(11) +
		in[21]*(21) +
		in[22]*(18) +
		in[23]*(-10) +
		in[24]*(0) +
		in[25]*(-12) +
		in[26]*(-30) +
		in[27]*(11) +
		in[28]*(-7) +
		in[29]*(15) +
		in[30]*(-55) +
		in[31]*(-1) +
		in[32]*(-38) +
		in[33]*(31) +
		in[34]*(29) +
		in[35]*(19) +
		in[36]*(12) +
		in[37]*(0) +
		in[38]*(-18) +
		in[39]*(17) +
		in[40]*(-13) +
		in[41]*(-7) +
		in[42]*(54) +
		in[43]*(23) +
		in[44]*(12) +
		in[45]*(-26) +
		in[46]*(20) +
		in[47]*(-5) +
		in[48]*(-2) +
		in[49]*(29) +
		(2602);
	out[6] =
		in[0]*(18) +
		in[1]*(-2) +
		in[2]*(-8) +
		in[3]*(33) +
		in[4]*(-26) +
		in[5]*(-57) +
		in[6]*(21) +
		in[7]*(-47) +
		in[8]*(1) +
		in[9]*(-30) +
		in[10]*(-23) +
		in[11]*(-4) +
		in[12]*(-43) +
		in[13]*(-12) +
		in[14]*(-13) +
		in[15]*(71) +
		in[16]*(-16) +
		in[17]*(3) +
		in[18]*(-18) +
		in[19]*(-12) +
		in[20]*(18) +
		in[21]*(4) +
		in[22]*(32) +
		in[23]*(24) +
		in[24]*(-36) +
		in[25]*(-25) +
		in[26]*(-67) +
		in[27]*(27) +
		in[28]*(-54) +
		in[29]*(55) +
		in[30]*(-17) +
		in[31]*(-11) +
		in[32]*(9) +
		in[33]*(-42) +
		in[34]*(2) +
		in[35]*(-10) +
		in[36]*(24) +
		in[37]*(-13) +
		in[38]*(42) +
		in[39]*(59) +
		in[40]*(-47) +
		in[41]*(-10) +
		in[42]*(-34) +
		in[43]*(-14) +
		in[44]*(26) +
		in[45]*(-10) +
		in[46]*(45) +
		in[47]*(34) +
		in[48]*(24) +
		in[49]*(-18) +
		(-952);
	out[7] =
		in[0]*(-15) +
		in[1]*(-28) +
		in[2]*(5) +
		in[3]*(-20) +
		in[4]*(-7) +
		in[5]*(20) +
		in[6]*(33) +
		in[7]*(25) +
		in[8]*(17) +
		in[9]*(-5) +
		in[10]*(-22) +
		in[11]*(2) +
		in[12]*(4) +
		in[13]*(-29) +
		in[14]*(25) +
		in[15]*(-58) +
		in[16]*(26) +
		in[17]*(-27) +
		in[18]*(14) +
		in[19]*(12) +
		in[20]*(53) +
		in[21]*(2) +
		in[22]*(-25) +
		in[23]*(35) +
		in[24]*(0) +
		in[25]*(25) +
		in[26]*(49) +
		in[27]*(29) +
		in[28]*(-17) +
		in[29]*(-46) +
		in[30]*(-75) +
		in[31]*(18) +
		in[32]*(4) +
		in[33]*(7) +
		in[34]*(-18) +
		in[35]*(-20) +
		in[36]*(-32) +
		in[37]*(2) +
		in[38]*(-29) +
		in[39]*(-42) +
		in[40]*(-28) +
		in[41]*(-7) +
		in[42]*(-7) +
		in[43]*(19) +
		in[44]*(-49) +
		in[45]*(34) +
		in[46]*(20) +
		in[47]*(-40) +
		in[48]*(29) +
		in[49]*(20) +
		(4349);
	out[8] =
		in[0]*(5) +
		in[1]*(18) +
		in[2]*(-2) +
		in[3]*(-36) +
		in[4]*(23) +
		in[5]*(-68) +
		in[6]*(-20) +
		in[7]*(-3) +
		in[8]*(73) +
		in[9]*(-5) +
		in[10]*(23) +
		in[11]*(-13) +
		in[12]*(-35) +
		in[13]*(-7) +
		in[14]*(-26) +
		in[15]*(-29) +
		in[16]*(30) +
		in[17]*(-11) +
		in[18]*(24) +
		in[19]*(9) +
		in[20]*(-14) +
		in[21]*(-54) +
		in[22]*(-11) +
		in[23]*(-8) +
		in[24]*(-1) +
		in[25]*(-54) +
		in[26]*(2) +
		in[27]*(25) +
		in[28]*(-33) +
		in[29]*(-27) +
		in[30]*(-36) +
		in[31]*(-8) +
		in[32]*(16) +
		in[33]*(35) +
		in[34]*(-31) +
		in[35]*(23) +
		in[36]*(-9) +
		in[37]*(-58) +
		in[38]*(31) +
		in[39]*(16) +
		in[40]*(-27) +
		in[41]*(37) +
		in[42]*(17) +
		in[43]*(22) +
		in[44]*(22) +
		in[45]*(-24) +
		in[46]*(-15) +
		in[47]*(26) +
		in[48]*(23) +
		in[49]*(-16) +
		(-7871);
	out[9] =
		in[0]*(-7) +
		in[1]*(-36) +
		in[2]*(20) +
		in[3]*(-16) +
		in[4]*(-12) +
		in[5]*(-16) +
		in[6]*(-21) +
		in[7]*(35) +
		in[8]*(2) +
		in[9]*(14) +
		in[10]*(-25) +
		in[11]*(48) +
		in[12]*(18) +
		in[13]*(-9) +
		in[14]*(-5) +
		in[15]*(35) +
		in[16]*(11) +
		in[17]*(13) +
		in[18]*(-47) +
		in[19]*(-54) +
		in[20]*(-28) +
		in[21]*(0) +
		in[22]*(6) +
		in[23]*(-10) +
		in[24]*(-68) +
		in[25]*(55) +
		in[26]*(12) +
		in[27]*(-31) +
		in[28]*(6) +
		in[29]*(-40) +
		in[30]*(-27) +
		in[31]*(13) +
		in[32]*(-10) +
		in[33]*(-32) +
		in[34]*(-11) +
		in[35]*(-17) +
		in[36]*(35) +
		in[37]*(46) +
		in[38]*(-68) +
		in[39]*(18) +
		in[40]*(-39) +
		in[41]*(5) +
		in[42]*(-12) +
		in[43]*(9) +
		in[44]*(3) +
		in[45]*(3) +
		in[46]*(-18) +
		in[47]*(-16) +
		in[48]*(-33) +
		in[49]*(45) +
		(-2212);
}

#endif

// Apply ReLU to a fixed size array
template <int SIZE>
inline void relu(int vec[SIZE]){
	for (int i=0; i< SIZE; i++){
		if (vec[i] < 0){
			vec[i] = 0;
		}
	}
	return;
}


int input[] = {12, 5, 17, 2, 0, 7, 20, 4, 10, 6, 8, 13, 12, 15, 5, 9, 8, 3, 11, 5, 14, 6, 8, 6, 18, 3, 7};

int main(){

	// Initialization
	vs_init();
	vs_stopwatch stopwatch;

	// Setup Host GUI
    //auto display_1 = vs_gui_add_display("capture",0,0);

    vs_on_host_connect([&](){
        vs_post_text("Scamp5d Demo - Fully Connected Computation Speed-up\n");
        vs_led_on(VS_LED_2);
    });

	vs_on_host_disconnect([&](){
		vs_led_off(VS_LED_2);
	});

    // First fully connected layer output
    int fc1_result[50];
    // Second fully connected layer output
    int fc2_result[10];

	// Frame Loop
    while(1){

        vs_process_message();

        stopwatch.reset();

#if FC_COMPUTATION_TYPE == 0

		fc_computation<27,50>(fc1_k, fc1_b, input, fc1_result);
		relu<50>(fc1_result);
		fc_computation<50,10>(fc2_k, fc2_b, fc1_result, fc2_result);

#else
		fc_1(input, fc1_result);
		relu<50>(fc1_result);
		fc_2(fc1_result, fc2_result);
#endif

		// Report elapsed time
		vs_post_text("It took %lu usec to run the FC network.\n", stopwatch.get_usec());
		// Output value of each neuron
		vs_post_text("FC result: ");
		for (int i=0; i<10; i++){
			  vs_post_text("%i,", fc2_result[i]);
		}
		vs_post_text("\n");
        vs_loop_counter_inc();
    }

	return 0;
}
